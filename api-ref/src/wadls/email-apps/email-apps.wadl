<?xml version="1.0" encoding="UTF-8"?>
<application xmlns="http://wadl.dev.java.net/2009/02"
   xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
   xmlns:db="http://docbook.org/ns/docbook"
   xmlns:common="http://docs.openstack.org/common/api/v1.0"
   xmlns:csapi="http://docs.openstack.org/compute/api/v2"
   xmlns:xsd="http://www.w3.org/2001/XMLSchema"
   xmlns:wadl="http://wadl.dev.java.net/2009/02"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns:raxapi="http://docs.rackspace.com/volume/api/v1">
   <resources base="http://api.emailsrvr.com/" xml:id="email">
      <!-- <resource id="version0" path="v0">-->
      <resource path="customers" id="customers">
         <method href="#listCustomers"/>
         <method href="#addSubaccount"/>
         <resource path="{customer_account_number}"
            id="customer_account_number">
            <param name="customer_account_number" style="template"
               required="true">
               <wadl:doc xmlns="http://docbook.org/ns/docbook"
                  xml:lang="EN"><para>The customer account
                     number.</para>
               </wadl:doc>
            </param>
            <method href="#showAccountDetails"/>
            <method href="#updateSubaccount"/>
            <method href="#deleteAccount"/>
            <resource path="loginToken" id="logintoken">
               <method href="#generateLoginToken"/>
            </resource>
            <resource path="admins" id="admins">
               <method href="#listAdmins"/>
               <resource path="{admin_name}" id="admin_name">
                  <param name="admin_name" style="template"
                     required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The admin name.</para>
                     </wadl:doc>
                  </param>
                  <method href="#showAdminDetails"/>
                  <method href="#addAdmin"/>
                  <method href="#updateAdmin"/>
                  <method href="#deleteAdmin"/>
               </resource>
            </resource>
            <resource path="domains" id="domains">
               <method href="#listDomains"/>
               <resource path="{domain_name}" id="domain_name">
                  <param name="domain_name" style="template"
                     required="true">
                     <wadl:doc xmlns="http://docbook.org/ns/docbook"
                        xml:lang="EN"><para>The domain name.</para>
                     </wadl:doc>
                  </param>
                  <method href="#showDomainDetails"/>
                  <method href="#addDomain"/>
                  <method href="#updateDomain"/>
                  <method href="#deleteDomain"/>
                  <resource path="alternatedomains"
                     id="alternatedomains">
                     <method href="#listDomainAliases"/>
                     <resource path="{alternate_domain_name}"
                        id="alternate_domain_name">
                        <param name="alternate_domain_name"
                           style="template" required="true">
                           <wadl:doc
                              xmlns="http://docbook.org/ns/docbook"
                              xml:lang="EN"><para>The alternate domain
                                 name.</para>
                           </wadl:doc>
                        </param>
                        <method href="#addDomainAlias"/>
                        <resource path="{alias_name}" id="alias_name">
                           <param name="alias_name" style="template"
                              required="true">
                              <wadl:doc
                                 xmlns="http://docbook.org/ns/docbook"
                                 xml:lang="EN"><para>The alias
                                   name.</para>
                              </wadl:doc>
                           </param>
                           <method href="#deleteAlternateDomain"/>
                        </resource>
                     </resource>
                  </resource>
                  <resource path="splitdomainrouting"
                     id="splitdomainrouting">
                     <method href="#showEmailServerDetails"/>
                     <method href="#setEmailServerDetails"/>
                  </resource>
                  <resource path="archivingSSOLoginURL"
                     id="archivingSSOLoginURL">
                     <method href="#showLoginURL"/>
                  </resource>
                  <resource path="rs" id="rs">
                     <resource path="mailboxes" id="mailboxes">
                        <method href="#listMailboxes"/>
                        <resource path="{mailbox_name}"
                           id="mailbox_name">
                           <param name="mailbox_name" style="template"
                              required="true">
                              <wadl:doc
                                 xmlns="http://docbook.org/ns/docbook"
                                 xml:lang="EN"><para>The mailbox
                                   name.</para>
                              </wadl:doc>
                           </param>
                           <method href="#showMailboxDetails"/>
                           <method href="#addMailbox"/>
                           <method href="#updateMailbox"/>
                           <method href="#deleteMailbox"/>
                           <resource path="loginToken" id="loginToken">
                              <method
                                 href="#generateLoginTokenMailbox"/>
                           </resource>
                           <resource path="spam" id="spam-mailbox">
                              <resource path="settings"
                                 id="settings-mailbox">
                                 <method
                                   href="#showMailboxSpamSettings"/>
                              </resource>
                              <resource path="blacklist"
                                 id="blacklist-mailbox">
                                 <method
                                   href="#listMailboxBlacklistEmails"/>
                                 <method
                                   href="#updateMailboxBlacklistEmails"/>
                                 <resource path="{email_address}"
                                   id="email_address-mailbox-blacklist">
                                   <param name="email_address"
                                   style="template" required="true">
                                   <wadl:doc
                                   xmlns="http://docbook.org/ns/docbook"
                                   xml:lang="EN"><para>The email
                                   address.</para>
                                   </wadl:doc>
                                   </param>
                                   <method
                                   href="#addMailboxBlacklistEmailOrDomain"/>
                                   <method
                                   href="#deleteMailboxBlacklistEmailOrDomain"
                                   />
                                 </resource>
                              </resource>
                              <resource path="ipblacklist"
                                 id="ipblacklist-mailbox">
                                 <method
                                   href="#listMailboxBlacklistIPs"/>
                                 <method
                                   href="#updateMailboxBlacklistIPs"/>
                                 <resource path="{ip_address}"
                                   id="ip_address-mailbox-blacklist">
                                   <param name="ip_address"
                                   style="template" required="true">
                                   <wadl:doc
                                   xmlns="http://docbook.org/ns/docbook"
                                   xml:lang="EN"><para>The IP
                                   address.</para>
                                   </wadl:doc>
                                   </param>
                                   <method
                                   href="#addMailboxBlacklistIP"/>
                                   <method
                                   href="#deleteMailboxBlacklistIP"/>
                                 </resource>
                              </resource>
                              <resource path="safelist"
                                 id="safelist-mailbox">
                                 <method
                                   href="#listMailboxSafelistEmails"/>
                                 <method
                                   href="#updateMailboxSafelistEmails"/>
                                 <resource path="{email_address}"
                                   id="email_address-mailbox-safelist">
                                   <param name="email_address"
                                   style="template" required="true">
                                   <wadl:doc
                                   xmlns="http://docbook.org/ns/docbook"
                                   xml:lang="EN"><para>The email
                                   address.</para>
                                   </wadl:doc>
                                   </param>
                                   <method
                                   href="#addMailboxSafelistEmailOrDomain"/>
                                   <method
                                   href="#deleteMailboxSafelistEmailOrDomain"
                                   />
                                 </resource>
                              </resource>
                              <resource path="ipsafelist"
                                 id="ipsafelist-mailbox">
                                 <method
                                   href="#listMailboxSafelistIPs"/>
                                 <method
                                   href="#updateMailboxSafelistIPs"/>
                                 <resource path="{ip_address}"
                                   id="ip_address-mailbox-safelist-ip">
                                   <param name="ip_address"
                                   style="template" required="true">
                                   <wadl:doc
                                   xmlns="http://docbook.org/ns/docbook"
                                   xml:lang="EN"><para>The IP
                                   address.</para>
                                   </wadl:doc>
                                   </param>
                                   <method
                                   href="#addMailboxSafelistIP"/>
                                 </resource>
                                 <resource path="{email_address}"
                                   id="email_address-mailbox-safelist-ip">
                                   <method
                                   href="#deleteMailboxSafelistIP"/>
                                 </resource>
                              </resource>
                           </resource>
                           <resource path="alias" id="alias">
                              <resource path="{alias_name}"
                                 id="alias_name-alias">
                                 <param name="customer_account_number"
                                   style="template" required="true">
                                   <wadl:doc
                                   xmlns="http://docbook.org/ns/docbook"
                                   xml:lang="EN"><para>The customer
                                   account number.</para>
                                   </wadl:doc>
                                 </param>
                                 <param name="alias_name"
                                   style="template" required="true">
                                   <wadl:doc
                                   xmlns="http://docbook.org/ns/docbook"
                                   xml:lang="EN"><para>The alias
                                   name.</para>
                                   </wadl:doc>
                                 </param>
                                 <method href="#showAliasDetails"/>
                                 <method href="#deleteAlias"/>
                                 <resource path="{email_address}"
                                   id="email_address-alias">
                                   <param name="email_address"
                                   style="template" required="true">
                                   <wadl:doc
                                   xmlns="http://docbook.org/ns/docbook"
                                   xml:lang="EN"><para>The email
                                   address.</para>
                                   </wadl:doc>
                                   </param>
                                   <method href="#addDomainlistEmail"/>
                                   <method href="#deleteAlias"/>
                                   <method href="#bulkUpdateAlias"/>
                                 </resource>
                              </resource>
                           </resource>
                        </resource>
                     </resource>
                     <resource path="storageNotification"
                        id="storagenotification">
                        <method href="#showMailboxSettingDetails"/>
                        <method href="#updateMailboxSettings"/>
                     </resource>
                     <resource path="aliases" id="aliases">
                        <method href="#listRackspaceDomainAliases"/>
                        <method href="#createAlias"/>
                        <method href="#deleteDomainlistEmail"/>
                        <method href="#bulkUpdateAlias"/>
                     </resource>
                  </resource>
                  <!--<resource path="ex" id="ex">
                     <resource path="publicfolders" id="publicfolders">
                        <method href="#showPublicFoldersStatus"/>
                        <method href="#enablePublicFolders"/>
                     </resource>
                     <resource path="contacts" id="contacts">
                        <method href="#listContacts"/>
                        <resource path="{contact_name}"
                           id="contact_name">
                           <method href="#showContactDetails"/>
                           <method href="#addContact"/>
                           <method href="#updateContact"/>
                           <method href="#deleteContact"/>
                        </resource>
                     </resource>
                  </resource>-->
                  <resource path="ex" id="ex">
                     <resource path="distributionLists"
                        id="distributionLists">
                        <method href="#listDistributionLists"/>
                        <method href="#showDistributionListDetails"/>
                        <method href="#addDistributionList"/>
                        <method href="#updateDistributionList"/>
                        <method href="#deleteDistributionList"/>
                        <method href="#exportDistributionListFile"/>
                        <method href="#importDistributionListFile"/>
                        <method
                           href="#listDistributionListAltEmails"/>
                        <method
                           href="#updateDistributionListMembers"/>
                        <method
                           href="#updateDistributionListMembers"/>
                        <method
                           href="#listDistributionListManagers"/>
                        <method
                           href="#updateDistributionListManagers"/>
                        <method href="#listDistributionListSenders"/>
                        <method
                           href="#updateDistributionListSenders"/>
                        <method href="#listRecipientsSenders"/>
                        <method href="#listRecipientsManagers"/>
                        <method href="#listRecipientsMembers"/>
                        <method href="#listRecipientsSendersDomain"/>
                        <method
                           href="#listRecipientsManagersDomain"/>
                        <method href="#listRecipientsMembersDomain"
                        />
                     </resource>
                     <resource path="resources"
                        id="ex-resources-v1">
                        <method href="#listResourceMailboxes"/>
                        <method href="#addResourceMailbox"/>
                        <method href="#exportResourceMailboxes"/>
                        <method href="#listResourceMailboxesDomain"/>
                        <resource path="{resource_name}"
                           id="resource_name">
                           <method href="#showResourceDetails"/>
                           <method href="#addResource"/>
                           <method href="#updateResource"/>
                           <method href="#deleteResource"/>
                           <resource path="admins"
                              id="admins-resource">
                              <method href="#listResourceAdmins"/>
                              <resource path="{admin_name}"
                                 id="admin_name-resource">
                                 <method href="#addResourceAdmin"/>
                                 <method href="#deleteResourceAdmin"
                                 />
                              </resource>
                           </resource>
                        </resource>
                        <resource path="resourceOptions"
                           id="resouceOptions">
                           <method
                              href="#listRecipientsForResource"/>
                           <resource
                              path="AvailableDelegatesRecipients"
                              id="availabledelegatesrecipients">
                              
                              <method href="#listRecipients"/>
                              
                              <method
                                 href="#listRecipientsDelegates"/>
                           </resource>
                           <resource
                              path="availableBookInPolicyRecipients"
                              id="availableBookInPolicyRecipients">
                              <method
                                 href="#listRecipientsForPolicies"/>
                           </resource>
                           <resource
                              path="AvailablePermissionsRecipients"
                              id="AvailablePermissionsRecipients">
                              <method
                                 href="#listRecipientsPermissions"/>
                           </resource>
                        </resource>
                        <resource path="{common_name}"
                           id="common_name">
                           <param name="common_name"
                              style="template" required="true">
                              <wadl:doc
                                 xmlns="http://docbook.org/ns/docbook"
                                 xml:lang="EN"><para>The common
                                    name.</para>
                              </wadl:doc>
                           </param>
                           <method href="#showResourceMailbox"/>
                           <method href="#updateResourceMailbox"/>
                           <method href="#deleteResourceMailbox"/>
                           <resource path="calendarProcessing"
                              id="calendarProcessing">
                              <method
                                 href="#showResouceMailboxCalendar"/>
                              <method
                                 href="#updateResourceMailboxCalendar"/>
                              <method
                                 href="#bulkUpdateResourceMailboxCalendar"
                              />
                           </resource>
                           <resource path="delegates"
                              id="delegates">
                              <method href="#listDelegates"/>
                              <method href="#bulkUpdateDelegates"/>
                           </resource>
                           <resource path="permissions"
                              id="permissions">
                              <method
                                 href="#showResourceMailboxPermissions"
                              />
                           </resource>
                           <resource path="bookInPolicy"
                              id="bookInPolicy">
                              <method href="#listPolicies"/>
                              <method href="#bulkUpdatePolicies"/>
                           </resource>
                        </resource>
                     </resource>
                  </resource>
                  <resource path="emaileveryone" id="emaileveryone">
                     <method href="#emailEveryone"/>
                  </resource>
                  <resource path="catchalladdress"
                     id="catchalladdress">
                     <method href="#showCatchAllAddress"/>
                     <method href="#updateCatchAllAddress"/>
                  </resource>
                  <resource path="spam" id="spam">
                     <resource path="settings" id="settings">
                        <method href="#showSpamSettings"/>
                        <method href="#updateMailboxSpamSettings"/>
                     </resource>
                     <resource path="blacklist" id="blacklist">
                        <method href="#listBlacklistEmails"/>
                        <method href="#updateBlacklistEmails"/>
                        <resource path="{email_address}"
                           id="email_address">
                           <param name="email_address"
                              style="template" required="true">
                              <wadl:doc
                                 xmlns="http://docbook.org/ns/docbook"
                                 xml:lang="EN"><para>The email
                                   address.</para>
                              </wadl:doc>
                           </param>
                           <method href="#addBlacklistEmailOrDomain"/>
                           <method
                              href="#deleteBlacklistEmailsOrDomains"/>
                        </resource>
                     </resource>
                     <resource path="ipblacklist" id="ipblacklist">
                        <method href="#listBlacklistIPs"/>
                        <method href="#updateBlacklistIPs"/>
                        <resource path="{ip_address}" id="ip_address">
                           <param name="ip_address" style="template"
                              required="true">
                              <wadl:doc
                                 xmlns="http://docbook.org/ns/docbook"
                                 xml:lang="EN"><para>The IP
                                   address.</para>
                              </wadl:doc>
                           </param>
                           <method href="#addBlacklistIP"/>
                           <method href="#deleteBlacklistIP"/>
                        </resource>
                     </resource>
                     <resource path="safelist" id="safelist">
                        <method href="#listSafelistEmails"/>
                        <method href="#updateSafelistEmail"/>
                        <resource path="{email_address}"
                           id="email_address-safelist">
                           <param name="email_address"
                              style="template" required="true">
                              <wadl:doc
                                 xmlns="http://docbook.org/ns/docbook"
                                 xml:lang="EN"><para>The email
                                   address.</para>
                              </wadl:doc>
                           </param>
                           <method href="#addSafelistEmailOrDomain"/>
                           <method href="#deleteSafelistEmailOrDomain"
                           />
                        </resource>
                     </resource>
                  </resource>
                  <resource path="ipsafelist" id="ipsafelist">
                     <method href="#listSafelistIPs"/>
                     <method href="#updateSafelistIPs"/>
                     <resource path="{ip_address}"
                        id="ip_address-safelist">
                        <param name="ip_address" style="template"
                           required="true">
                           <wadl:doc
                              xmlns="http://docbook.org/ns/docbook"
                              xml:lang="EN"><para>The IP
                                 address.</para>
                           </wadl:doc>
                        </param>
                        <method href="#addSafelistIP"/>
                        <method href="#deleteSafelistIP"/>
                     </resource>

                  </resource>
               </resource>
               <resource path="mobilesync" id="mobilesync">
                  <resource path="users" id="users">
                     <method href="#listMobileSyncUsers"/>
                     <method href="#showDomainAutoProvisionSetting"/>
                     <method href="#setMobileSyncAutoProvision"/>
                     <resource path="enable" id="enable">
                        <method href="#enableMobileSync"/>
                     </resource>
                     <resource path="disable" id="disable">
                        <method href="#disableMobileSync"/>
                     </resource>
                  </resource>
               </resource>
            </resource>
            <resource path="sharepoint" id="sharepoint">
               <resource path="settings" id="sharepoint-settings">
                  <method href="#showSharepointStatus"/>
                  <method href="#updateSharepointSettings"/>
               </resource>
            </resource>
         </resource>
      </resource>
      <resource path="{new_customer_account_number}"
         id="new_customer_account_number">
         <param type="xsd:string" style="plain" required="true">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN" title="New customer account number"
                  ><para>The customer account number to which you want
                  to move the domain.</para></wadl:doc>
         </param>
         <resource path="domains" id="domains2">
            <method href="#listDomains"/>
            <resource path="{domain_name}" id="domain_name2">
               <param name="domain_name" style="template"
                  required="true">
                  <wadl:doc xmlns="http://docbook.org/ns/docbook"
                     xml:lang="EN"><para>The domain name.</para>
                  </wadl:doc>
               </param>
               <method href="#moveDomain"/>
            </resource>
         </resource>
      </resource>
      <!--    </resource>-->
    <!--  <resource id="version1" path="v1">-->
         <resource path="customers" id="customers-v1">
            <resource path="{customer_account_number}"
               id="customer_account_number-v1">
               <resource path="domains" id="domains-v1">
                  <resource path="{domain_name}" id="domain_name-v1">
                     
                  </resource>
               </resource>
            </resource>
         </resource>
   </resources>
   <!-- methods -->
   <!-- Customer account operations -->
   <method id="listCustomers" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List customers (reseller only)">
         <para role="shortdesc">Lists customers to which the
            authenticated user has access.</para>
         <para>Filter/Search</para>
         <para>Search parameter 'startswith' and 'contains' will try
            to find the result in customer name, account number and
            reference number. We also provide a separate query method
            ?referenceNumber=123456 that will return a Show on the
            exact customer whose reference number is as
            specified.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET '/customers?size=100\u0026offset=10,'
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code href="samples/customers-list-response.xml"
               />
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code href="samples/customers-list-response.json"
               />
            </wadl:doc>
         </representation>
      </response>
   </method>
   <method id="addSubaccount" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add sub-account (reseller only)">
         <para role="shortdesc">Adds a sub-account.</para>
         <para>Note that customer number is not known until the
            customer is added.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>name</td>
                  <td>string</td>
                  <td>The customer's display name (Required for
                     Add)</td>
               </tr>
               <tr>
                  <td>referenceNumber</td>
                  <td>string</td>
                  <td>The reference number of this account</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST '/customers', 'text/xml', { 'name' =\u003E
                  'Name' }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>The name field was not specified. Sample Message:
               Missing required field: name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>The name field cannot be blank. Sample Message:
               Required field name cannot be empty</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Names cannot start with a space. Sample Message:
               Improper Customer Name</para>
         </wadl:doc>
      </response>
   </method>
   <method id="showAccountDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Show sub-account details (reseller only)">
         <para role="shortdesc">Shows sub-account details.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>To do the show operation on the account that is
                  logged in instead of a customer's account, use "me"
                  in the place of the customer account number i.e.
                  'https://api.emailsrvr.com/v0/customers/me'.</para>
            </listitem>
            <listitem>
               <para>The show operation only supports the GET HTTP
                  verb. For text/xml format, refer to the following
                  schema document: <link
                     xlink:href="http://api.emailsrvr.com/Schemas/Customer.xsd"
                     >Customer.xsd</link>
               </para>
            </listitem>
         </itemizedlist>
         <para>Example: Querying with Reference Number</para>
         <para>The query string "referenceNumber=xx" searches for a
            customer with an exact reference number.</para>
         <itemizedlist>
            <listitem>
               <para>GET '/customers?referenceNumber=49',
                  'text/xml'</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET /customers/me, text/xml" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  href="samples/account-show-details-response.xml"/>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"name":"API Customer
                  17","accountNumber":"460182","referenceNumber":"49"}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="updateSubaccount" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update sub-account (reseller only)">
         <para role="shortdesc">Updates a sub-account.</para>
      </wadl:doc>
      <request>
         <param name="name" style="plain" type="xsd:string"
            required="true">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>The display name for the
                  customer.</para>
            </wadl:doc>
         </param>
         <param name="referenceNumber" style="plain" type="xsd:string"
            required="false">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN"><para>The reference number for the
                  account</para>
            </wadl:doc>
         </param>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT '/customers/999999', 'text/xml', { 'name'
                  =\u003E 'NewName', 'referenceNumber' =\u003E '12345'
                  }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>The name field was not specified. Sample Message:
               Missing required field: name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>The name field cannot be blank. Sample Message:
               Required field name cannot be empty</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Names cannot start with a space. Sample Message:
               Improper Customer Name</para>
         </wadl:doc>
      </response>
   </method>
   <method id="deleteAccount" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete sub-account (reseller only)">
         <para role="shortdesc">Deletes a sub-account.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE '/customers/999999', 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="generateLoginToken" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Generate login token">
         <para role="shortdesc">Generates a login token that a
            customer can use to SSO into the Control Panel.</para>
         <para>Login tokens can be generated for virtual and
            non-virtual users.</para>
         <itemizedlist>
            <listitem>
               <para>Virtual user gets the administrator's privileges
                  when SSOed into the Control Panel.</para>
            </listitem>
            <listitem>
               <para>Non-virtual user gets only as much privileges as
                  are given to him/her when his/her account was
                  created.</para>
            </listitem>
         </itemizedlist>
         <para>A Login token is valid for ten minutes after its
            creation. The "dateCreated" field indicates the time when
            the login token is created.</para>
         <itemizedlist>
            <listitem>
               <para>Using the generated login token shown in the
                  example below, the customer with account number
                  460896 can SSO into the Control Panel using the
                  following URL:
                  http://ControlPanelURL/TokenLogin.aspx?loginToken=EEB0012D8DBC2CAC26E28365D44B537FFF0D79350</para>
            </listitem>
            <listitem>
               <para>A customer can also use the login token to log
                  into their private label control panel (E.g.:
                  cp.mydomain.com/logintokens.aspx).</para>
            </listitem>
         </itemizedlist>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>userName</td>
                  <td>string</td>
                  <td>The name for which login token needs to be
                     created.</td>
               </tr>
               <tr>
                  <td>virtualUser</td>
                  <td>string</td>
                  <td>A flag indicating whether the user for whom the
                     login token needs to be generated is virtual or
                     non-virtual. Valid values: true/false. When set
                     to true, the userName is treated as a virtual
                     user. When set to false, the userName is treated
                     as a non-virtual user. A non-virtual user must be
                     an existing admin user.</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST '/customers/460896/loginToken', 'text/xml' {
                  'userName' =\u003E 'dev_cust_limitedadmin',
                  'virtualUser' =\u003E 'true' }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;loginToken
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:loginToken"&gt;
                  &lt;user&gt;dev_cust_limitedadmin_460896_vu&lt;/user&gt;
                  &lt;token&gt;EEB0012D8DBC2CAC26E28365D44B537FFF0D79350&lt;/token&gt;
                  &lt;dateCreated&gt;6/11/2010 10:53:46
                  AM&lt;/dateCreated&gt;
                  &lt;/loginToken&gt;</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
   </method>
   <!-- Admin operations -->
   <method id="listAdmins" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List account admins">
         <para role="shortdesc">Lists account admins.</para>
         <para>If you specify a customer account, a list of admins
            under that specific account are returned.</para>
         <itemizedlist>
            <listitem>
               <para>This operation Lists admins under the account. If
                  you specify a customer account, a list of admins
                  under that specific account is returned.</para>
            </listitem>
            <listitem>
               <para>Alternate route: /v0/admins</para>
            </listitem>
         </itemizedlist>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>To retrieve a list of admins owned by the account
                  that is logged in, use "me" as the customer account
                  number i.e.
                  'https://api.emailsrvr.com/v0/customers/me/domains'.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET '/customers/999999/admins?size=5\u0026page=1',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;adminList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:adminList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;admins&gt;
                  &lt;admin&gt;
                  &lt;adminId&gt;apiadmin37&lt;/adminId&gt;
                  &lt;type&gt;super&lt;/type&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;locked&gt;false&lt;/locked&gt; &lt;/admin&gt;
                  &lt;admin&gt;
                  &lt;adminId&gt;apiadmin76&lt;/adminId&gt;
                  &lt;type&gt;super&lt;/type&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;locked&gt;false&lt;/locked&gt; &lt;/admin&gt;
                  &lt;admin&gt;
                  &lt;adminId&gt;apiadmin94&lt;/adminId&gt;
                  &lt;type&gt;super&lt;/type&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;locked&gt;false&lt;/locked&gt; &lt;/admin&gt;
                  &lt;/admins&gt; &lt;/adminList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"admins":[{"adminId":"apiadmin37","enabled":true,"locked":false,"type":"super"},{"adminId":"apiadmin76","enabled":true,"locked":false,"type":"super"},{"adminId":"apiadmin94","enabled":true,"locked":false,"type":"super"}],"offset":0,"size":50,"total":3}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="showAdminDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show admin details">
         <para role="shortdesc">Shows admin details.</para>
         <itemizedlist>
            <listitem>
               <para>The show operation will return detailed
                  information about the specified admin.</para>
            </listitem>
            <listitem>
               <para>Alternate route: /v0/admins/{admin name}</para>
            </listitem>
         </itemizedlist>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The show operation only supports the GET HTTP
                  verb. For text/xml format, refer to the following
                  schema document: <link
                     xlink:href="http://api.emailsrvr.com/Schemas/Admin.xsd"
                     >Admin.xsd</link>
               </para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET '/customers/999999/admins/admin1', 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;admin
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:admin"&gt;
                  &lt;adminId&gt;apiadmin1&lt;/adminId&gt;
                  &lt;type&gt;super&lt;/type&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;locked&gt;false&lt;/locked&gt;
                  &lt;firstName&gt;First&lt;/firstName&gt;
                  &lt;lastName&gt;Last&lt;/lastName&gt;
                  &lt;email&gt;first.last@rackspace.com&lt;/email&gt;
                  &lt;passwordExpiration&gt;10&lt;/passwordExpiration&gt;
                  &lt;allowSimultaneousLogins&gt;false&lt;/allowSimultaneousLogins&gt;
                  &lt;restrictedIps&gt;
                  &lt;restrictedIps&gt;1.1.1.1&lt;/restrictedIps&gt;
                  &lt;restrictedIps&gt;1.1.1.2&lt;/restrictedIps&gt;
                  &lt;restrictedIps&gt;1.1.1.3&lt;/restrictedIps&gt;
                  &lt;/restrictedIps&gt; &lt;/admin&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"adminId":"apiadmin1","allowSimultaneousLogins":false,"email":"first.last@rackspace.com","firstName":"First","enabled":true,"locked":false,"lastName":"Last","passwordExpiration":10,"restrictedIps":["1.1.1.1","1.1.1.2","1.1.1.3"],"type":"super"}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="addAdmin" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add admin">
         <para role="shortdesc">Adds an admin to a specified
            account.</para>
         <itemizedlist>
            <listitem>
               <para>Add a new admin under the specified
                  account.</para>
            </listitem>
            <listitem>
               <para>Alternate route: /v0/admins/{admin name}</para>
            </listitem>
         </itemizedlist>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>type</td>
                  <td>string</td>
                  <td>Admin type (Required for Add). Must be "super",
                     "standard" or "limited". Can't change permissions
                     and domain access for limited admin at this
                     point.</td>
               </tr>
               <tr>
                  <td>password</td>
                  <td>string</td>
                  <td>Admin log in password (Required for Add)</td>
               </tr>
               <tr>
                  <td>firstName</td>
                  <td>string</td>
                  <td>Admin first name (Required for Add)</td>
               </tr>
               <tr>
                  <td>lastName</td>
                  <td>string</td>
                  <td>Admin last name (Required for Add)</td>
               </tr>
               <tr>
                  <td>email</td>
                  <td>string</td>
                  <td>Admin contact email (Required for Add)</td>
               </tr>
               <tr>
                  <td>securityQuestion</td>
                  <td>string</td>
                  <td>Security question (Required for Add)</td>
               </tr>
               <tr>
                  <td>securityAnswer</td>
                  <td>string</td>
                  <td>Security answer (Required for Add)</td>
               </tr>
               <tr>
                  <td>passwordExpiration</td>
                  <td>int</td>
                  <td>The number of days in which password expires. 0
                     means password never expires.</td>
               </tr>
               <tr>
                  <td>allowSimultaneousLogins</td>
                  <td>boolean</td>
                  <td>Allow simultaneous logins using this
                     administrative ID</td>
               </tr>
               <tr>
                  <td>restrictedIps</td>
                  <td>string</td>
                  <td>Login restricted to IP address(es). Can be up to
                     3 valid addresses separated by commas.</td>
               </tr>
               <tr>
                  <td>enabled</td>
                  <td>boolean</td>
                  <td>Enable/disable admin account</td>
               </tr>
               <tr>
                  <td>locked</td>
                  <td>boolean</td>
                  <td>Lock/unlock admin account</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST '/customers/999999/admins/admin1', { 'type'
                  =\u003E 'super', 'password' =\u003E 'password',
                  'firstName' =\u003E 'First', 'lastName' =\u003E
                  'Last', 'email' =\u003E 'first.last@rackspace.com',
                  'securityQuestion' =\u003E 'Q', 'securityAnswer'
                  =\u003E 'A' }, 'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Password doesn't meet the requirements. Sample
               Message: Password must be 7 to 30 characters.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid email address. Sample Message: Invalid email
               address.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid restricted to IP address(es). Sample
               Message: IP addresses must be valid addresses separated
               by commas. A maximum of 3 addresses may be
               entered.</para>
         </wadl:doc>
      </response>
   </method>
   <method id="updateAdmin" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update admin">
         <para role="shortdesc">Updates an admin for a specified
            account.</para>
         <itemizedlist>
            <listitem>
               <para>Edit an existing admin under the specified
                  account.</para>
            </listitem>
            <listitem>
               <para>Alternate route: /v0/admins/{admin name}</para>
            </listitem>
         </itemizedlist>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>type</td>
                  <td>string</td>
                  <td>Admin type (Required for Add). Must be "super",
                     "standard" or "limited". Can't change permissions
                     and domain access for limited admin at this
                     point.</td>
               </tr>
               <tr>
                  <td>password</td>
                  <td>string</td>
                  <td>Admin log in password (Required for Add)</td>
               </tr>
               <tr>
                  <td>firstName</td>
                  <td>string</td>
                  <td>Admin first name (Required for Add)</td>
               </tr>
               <tr>
                  <td>lastName</td>
                  <td>string</td>
                  <td>Admin last name (Required for Add)</td>
               </tr>
               <tr>
                  <td>email</td>
                  <td>string</td>
                  <td>Admin contact email (Required for Add)</td>
               </tr>
               <tr>
                  <td>securityQuestion</td>
                  <td>string</td>
                  <td>Security question (Required for Add)</td>
               </tr>
               <tr>
                  <td>securityAnswer</td>
                  <td>string</td>
                  <td>Security answer (Required for Add)</td>
               </tr>
               <tr>
                  <td>passwordExpiration</td>
                  <td>int</td>
                  <td>The number of days in which password expires. 0
                     means password never expires.</td>
               </tr>
               <tr>
                  <td>allowSimultaneousLogins</td>
                  <td>boolean</td>
                  <td>Allow simultaneous logins using this
                     Administrative ID</td>
               </tr>
               <tr>
                  <td>restrictedIps</td>
                  <td>string</td>
                  <td>Login restricted to IP address(es). Can be up to
                     3 valid addresses separated by commas.</td>
               </tr>
               <tr>
                  <td>enabled</td>
                  <td>boolean</td>
                  <td>Enable/disable admin account</td>
               </tr>
               <tr>
                  <td>locked</td>
                  <td>boolean</td>
                  <td>Lock/unlock admin account</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT '/customers/999999/admins/admin2', { 'enabled'
                  =\u003E 'true', 'locked' =\u003E 'false',
                  'passwordExpiration' =\u003E '0',
                  'allowSimultaneousLogins' =\u003E 'true',
                  'restrictedIps' =\u003E '1.1.1.1' }, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Password doesn't meet the requirements. Sample
               Message: Password must be 7 to 30 characters.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid email address. Sample Message: Invalid email
               address.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid restricted to IP address(es). Sample
               Message: IP addresses must be valid addresses separated
               by commas. A maximum of 3 addresses may be
               entered.</para>
         </wadl:doc>
      </response>
   </method>
   <method id="deleteAdmin" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete admin">
         <para role="shortdesc">Deletes an admin from a specified
            account.</para>
         <itemizedlist>
            <listitem>
               <para>Deletes an admin</para>
            </listitem>
            <listitem>
               <para>Alternate route: /v0/admins/{admin name}</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE '/customers/999999/admins/admin1',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <!-- Domain operations -->
   <method id="listDomains" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List domains">
         <para role="shortdesc">Lists domains in a specified
            account.</para>
         <para>If you specify a customer account, a list of domains
            under that specific account is returned.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>To retrieve a list of domains owned by the
                  account that is logged in, use "me" as the customer
                  account number i.e.
                  'https://api.emailsrvr.com/v0/customers/me/domains'.
                  To retrieve a list of domains owned by all customer
                  sub-accounts and your own account, use "all" as the
                  customer account number.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/all/domains?size=100\u0026offset=10',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;domainList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:domainList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;domains&gt;
                  &lt;domain&gt;
                  &lt;name&gt;apidomain53.com&lt;/name&gt;
                  &lt;accountNumber&gt;100000&lt;/accountNumber&gt;
                  &lt;serviceType&gt;both&lt;/serviceType&gt;
                  &lt;/domain&gt; &lt;domain&gt;
                  &lt;name&gt;apidomain66.com&lt;/name&gt;
                  &lt;accountNumber&gt;100001&lt;/accountNumber&gt;
                  &lt;serviceType&gt;both&lt;/serviceType&gt;
                  &lt;/domain&gt; &lt;domain&gt;
                  &lt;name&gt;apidomain68.com&lt;/name&gt;
                  &lt;accountNumber&gt;100002&lt;/accountNumber&gt;
                  &lt;serviceType&gt;both&lt;/serviceType&gt;
                  &lt;/domain&gt; &lt;/domains&gt;
                  &lt;/domainList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":0,"size":50,"total":3,"domains":
                  [{"name":"apidomain53.com","accountNumber":"100000","serviceType":"both"},
                  {"name":"apidomain66.com","accountNumber":"100001","serviceType":"both"},
                  {"name":"apidomain68.com","accountNumber":"100002","serviceType":"both"}]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="showDomainDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show domain details">
         <para role="shortdesc">Shows domain details.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The show operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Notes</para>
         <itemizedlist>
            <listitem>
               <para>These two fields 'exchangeUsedStorage' and
                  'rsEmailUsedStorage' actually return the number of
                  active mailboxes in each service
                  respectively.</para>
            </listitem>
            <listitem>
               <para>Due to a performance issue Domain Public Folder
                  Status is now returned from an individual URL. The
                  field 'publicFoldersEnabled' from Show Domain result
                  always returns 'false' at this moment.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET '/customers/999999/domains/example.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;domain
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:domain"&gt;
                  &lt;name&gt;apidomain21.com&lt;/name&gt;
                  &lt;accountNumber&gt;100000&lt;/accountNumber&gt;
                  &lt;serviceType&gt;both&lt;/serviceType&gt;
                  &lt;exchangeBaseMailboxSize&gt;2048&lt;/exchangeBaseMailboxSize&gt;
                  &lt;exchangeUsedStorage&gt;0&lt;/exchangeUsedStorage&gt;
                  &lt;exchangeTotalStorage&gt;18432&lt;/exchangeTotalStorage&gt;
                  &lt;exchangeExtraStorage&gt;10240&lt;/exchangeExtraStorage&gt;
                  &lt;exchangeMaxNumMailboxes&gt;4&lt;/exchangeMaxNumMailboxes&gt;
                  &lt;rsEmailBaseMailboxSize&gt;2048&lt;/rsEmailBaseMailboxSize&gt;
                  &lt;rsEmailMaxNumberMailboxes&gt;4&lt;/rsEmailMaxNumberMailboxes&gt;
                  &lt;rsEmailExtraStorage&gt;10240&lt;/rsEmailExtraStorage&gt;
                  &lt;rsEmailUsedStorage&gt;0&lt;/rsEmailUsedStorage&gt;
                  &lt;aliases /&gt;
                  &lt;archivingServiceEnabled&gt;false&lt;/archivingServiceEnabled&gt;
                  &lt;publicFoldersEnabled&gt;false&lt;/publicFoldersEnabled&gt;
                  &lt;blackBerryMobileServiceEnabled&gt;true&lt;/blackBerryMobileServiceEnabled&gt;
                  &lt;blackBerryLicenses&gt;4&lt;/blackBerryLicenses&gt;
                  &lt;activeSyncMobileServiceEnabled&gt;true&lt;/activeSyncMobileServiceEnabled&gt;
                  &lt;activeSyncLicenses&gt;4&lt;/activeSyncLicenses&gt;
                  &lt;/domain&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"name":"apidomain21.com","accountNumber":"100000","serviceType":"both",
                  "exchangeBaseMailboxSize":2048,"exchangeUsedStorage":0,"exchangeTotalStorage":18432,
                  "exchangeExtraStorage":10240,"exchangeMaxNumMailboxes":4,"rsEmailBaseMailboxSize":2048,
                  "rsEmailMaxNumberMailboxes":4,"rsEmailExtraStorage":10240,"rsEmailUsedStorage":0,
                  "aliases":[],"archivingServiceEnabled":false,"publicFoldersEnabled":false,
                  "blackBerryMobileServiceEnabled":true,"blackBerryLicenses":4,"activeSyncMobileServiceEnabled":true,
                  "activeSyncLicenses":4}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="addDomain" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add domain (reseller only)">
         <para role="shortdesc">Adds a domain and specified data to an
            account.</para>
         <itemizedlist>
            <listitem>
               <para>Adds a domain to the account with the data
                  specified.</para>
            </listitem>
            <listitem>
               <para>To add a domain to your own account, use your own
                  account id.</para>
            </listitem>
         </itemizedlist>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>serviceType</td>
                  <td>string</td>
                  <td>Domain service type. "rsemail" = "Rackspace
                     Email Only". "exchange" = "Exchange Only". "both"
                     = "Rackspace Email and Exchange"</td>
               </tr>
               <tr>
                  <td>exchangeExtraStorage</td>
                  <td>int</td>
                  <td>Exchange service extra storage in megabytes</td>
               </tr>
               <tr>
                  <td>exchangeMaxNumMailboxes</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed under the
                     domain Exchange service. Required for Adding
                     Exchange service</td>
               </tr>
               <tr>
                  <td>rsEmailBaseMailboxSize</td>
                  <td>int</td>
                  <td>Rackspace Email base mailbox size in
                     megabytes</td>
               </tr>
               <tr>
                  <td>rsEmailMaxNumberMailboxes</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed under the
                     domain Rackspace Email service. Required for
                     Adding Rackspace Email service</td>
               </tr>
               <tr>
                  <td>rsEmailExtraStorage</td>
                  <td>int</td>
                  <td>Rackspace Email service extra storage in
                     megabytes</td>
               </tr>
               <tr>
                  <td>blackBerryMobileServiceEnabled</td>
                  <td>boolean</td>
                  <td>Enable or disable domain BlackBerry Mobile
                     service</td>
               </tr>
               <tr>
                  <td>blackBerryLicenses</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed to have
                     BlackBerry Mobile service. 0 means unlimited</td>
               </tr>
               <tr>
                  <td>activeSyncMobileServiceEnabled</td>
                  <td>boolean</td>
                  <td>Enable or disable domain ActiveSync Mobile
                     service</td>
               </tr>
               <tr>
                  <td>activeSyncLicenses</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed to have
                     ActiveSync Mobile service. 0 means unlimited</td>
               </tr>
               <tr>
                  <td>goodMobileServiceEnabled (deprecated)</td>
                  <td>boolean</td>
                  <td>Enable or disable domain Good Mobile
                     service</td>
               </tr>
               <tr>
                  <td>goodMobileLicenses (deprecated)</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed to have Good
                     Mobile service. 0 means unlimited</td>
               </tr>
               <tr>
                  <td>archivingServiceEnabled</td>
                  <td>boolean</td>
                  <td>Enable or disable domain archiving service</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST '/customers/123455/domains/newcompany.com',
                  'text/xml', { 'maxNumMailboxes' =\u003E '5',
                  'extraStorage' =\u003E '1024' }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New domain name doesn't meet the naming
               requirements. Sample Message: Invalid domain
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New domain name already exists. Sample Message:
               abc.com already exists as a domain or alternate
               domain</para>
         </wadl:doc>
      </response>
   </method>
   <method id="updateDomain" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update domain (reseller only)">
         <para role="shortdesc">Updates a domain with specified
            data.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>serviceType</td>
                  <td>string</td>
                  <td>Domain service type. "rsemail" = "Rackspace
                     Email Only". "exchange" = "Exchange Only". "both"
                     = "Rackspace Email and Exchange"</td>
               </tr>
               <tr>
                  <td>exchangeExtraStorage</td>
                  <td>int</td>
                  <td>Exchange service extra storage in megabytes</td>
               </tr>
               <tr>
                  <td>exchangeMaxNumMailboxes</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed under the
                     domain Exchange service. Required for Adding
                     Exchange service</td>
               </tr>
               <tr>
                  <td>rsEmailBaseMailboxSize</td>
                  <td>int</td>
                  <td>Rackspace Email base mailbox size in
                     megabytes</td>
               </tr>
               <tr>
                  <td>rsEmailMaxNumberMailboxes</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed under the
                     domain Rackspace Email service. Required for
                     Adding Rackspace Email service</td>
               </tr>
               <tr>
                  <td>rsEmailExtraStorage</td>
                  <td>int</td>
                  <td>Rackspace Email service extra storage in
                     megabytes</td>
               </tr>
               <tr>
                  <td>blackBerryMobileServiceEnabled</td>
                  <td>boolean</td>
                  <td>Enable or disable domain BlackBerry Mobile
                     service</td>
               </tr>
               <tr>
                  <td>blackBerryLicenses</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed to have
                     BlackBerry Mobile service. 0 means unlimited</td>
               </tr>
               <tr>
                  <td>activeSyncMobileServiceEnabled</td>
                  <td>boolean</td>
                  <td>Enable or disable domain ActiveSync Mobile
                     service</td>
               </tr>
               <tr>
                  <td>activeSyncLicenses</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed to have
                     ActiveSync Mobile service. 0 means unlimited</td>
               </tr>
               <tr>
                  <td>goodMobileServiceEnabled (deprecated)</td>
                  <td>boolean</td>
                  <td>Enable or disable domain Good Mobile
                     service</td>
               </tr>
               <tr>
                  <td>goodMobileLicenses (deprecated)</td>
                  <td>int</td>
                  <td>Maximum number of mailboxes allowed to have Good
                     Mobile service. 0 means unlimited</td>
               </tr>
               <tr>
                  <td>archivingServiceEnabled</td>
                  <td>boolean</td>
                  <td>Enable or disable domain archiving service</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT '/customers/123455/domains/newcompany.com',
                  'text/xml', { 'maxNumMailboxes' =\u003E '25',
                  'extraStorage' =\u003E '2048' }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New domain name doesn't meet the naming
               requirements. Sample Message: Invalid domain
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New domain name already exists. Sample Message:
               abc.com already exists as a domain or alternate
               domain</para>
         </wadl:doc>
      </response>
   </method>
   <method id="moveDomain" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Move domain (reseller only)">
         <para role="shortdesc">Moves a domain to a specified customer
            account.</para>
         <para>Remarks</para>
         <para>'Move Domain' and 'Edit Domain' share the same URI and
            HTTP verb. When the domain doesn't belong to the customer
            and 'moveDomain' is set to 'true', API will take the
            request as a 'Move Domain' call.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>moveDomain</td>
                  <td>boolean</td>
                  <td>Indicate whether or not moving the domain</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT '/customers/123456/domains/newcompany.com',
                  'text/xml', { 'moveDomain' =\u003E 'true' }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="deleteDomain" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete domain (reseller only)">
         <para role="shortdesc">Deletes a domain.</para>
         <para>Remarks</para>
         <para>The domain and all the mailboxes, mailbox contents,
            groups, and contacts are deleted permanently.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/newcompany.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="listDomainAliases" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List domain aliases and alternate domains (reseller only)">
         <para role="shortdesc">Lists domain aliases and accepted
            alternate domains for a specified domain.</para>
         <itemizedlist>
            <listitem>
               <para>This operation Lists Domain Aliases and Accepted
                  Domains for the domain.</para>
            </listitem>
            <listitem>
               <para>The type of the alternate domain is indicated by
                  the 'type' data field.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/test.com/alternatedomains',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;alternateDomainList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:domainAlternateList"&gt;
                  &lt;alternateDomains&gt; &lt;alternateDomain&gt;
                  &lt;name&gt;domainalias.com&lt;/name&gt;
                  &lt;type&gt;DomainAlias&lt;/type&gt;
                  &lt;/alternateDomain&gt; &lt;alternateDomain&gt;
                  &lt;name&gt;accepteddomain.com&lt;/name&gt;
                  &lt;type&gt;AcceptedDomain&lt;/type&gt;
                  &lt;/alternateDomain&gt; &lt;/alternateDomains&gt;
                  &lt;/alternateDomainList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"alternateDomains":[{"name":"domainalias.com","type":"DomainAlias"},{"name":"accepteddomain.com","type":"AcceptedDomain"}]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="addDomainAlias" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add domain alias or alternate domain (reseller only)">
         <para role="shortdesc">Adds a domain alias or accepted
            alternate domain to a specified domain.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>type</td>
                  <td>string</td>
                  <td>Alternate domain type. Send "DomainAlias" for a
                     domain alias, and "AcceptedDomain" for an
                     accepted domain. (Required)</td>
               </tr>
               <tr>
                  <td>createForExistingRecipients</td>
                  <td>boolean</td>
                  <td>Whether the alternate addresses should be
                     created for existing mailboxes when adding an
                     Accepted Domain. Sending this field in the
                     request when the type is Domain Alias will throw
                     an error. This defaults to false.</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/123456/domains/example.com/alternatedomains/accepteddomain.com',
                  'text/xml', { 'type' =\u003E 'AcceptedDomain'
                  'createForExistingRecipients' =\u003E 'true' }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New domain name doesn't meet the naming
               requirements. Sample Message: Invalid domain
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Alternate domain already exists. Sample Message:
               abc.com already exists as a domain or alternate
               domain</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>The 'createForExistingRecipients' field was sent
               with either data, or as a null field. It should not be
               included in the form data at all.. Sample Message:
               Invalid Alternate Domain Setting:
               createForExistingRecipients is an invalid setting for
               Domain Aliases</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>The only valid values for 'type' are 'DomainAlias'
               and 'AcceptedDomain', for a Domain Alias and Accepted
               Domain respectively.. Sample Message: Invalid Alternate
               Domain type</para>
         </wadl:doc>
      </response>
   </method>
   <method id="deleteAlternateDomain" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete alternate domain (reseller only)">
         <para role="shortdesc">Deletes an alternate domain.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/alternatedomains/accepteddomain.com'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="showEmailServerDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show external email server details (split domain routing)">
         <para role="shortdesc">Shows current external email server
            details.</para>
         <itemizedlist>
            <listitem>
               <para>Shows the current external email server.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/company.com/splitdomainrouting',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;splitDomainRouting
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:splitDomainRouting"&gt;
                  &lt;externalServer&gt;email.externalserver.com&lt;/externalServer&gt;
                  &lt;/splitDomainRouting&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"externalServer":"email.externalserver.com"}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="setEmailServerDetails" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Set external email server details (split domain routing)">
         <para role="shortdesc">Sets the external email server
            details.</para>
         <para>This command will return a success when the
            verification passes. Since this involves communication to
            the external server the request may take some time. If the
            verification fails a 400 return code is sent back with the
            verification's error message.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>externalServer</td>
                  <td>string</td>
                  <td>The address of the external email server. To
                     turn off split domain routing send 'none'.
                     (Required)</td>
               </tr>
               <tr>
                  <td>verificationAddress</td>
                  <td>string</td>
                  <td>An email address part of your domain or one of
                     the alternate domains that the external server is
                     already set up to handle. (Required only when
                     turning on split domain routing, Do not send this
                     field if turning off.)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/company.com/splitdomainrouting',
                  'text/xml', { 'externalServer' =\u003E
                  'email.externalserver.com', 'verificationAddress'
                  =\u003E 'externalaccount@company.com', }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>The SMTP host could not be found.. Sample Message:
               One of the verification error messages.</para>
         </wadl:doc>
      </response>
   </method>
   <method id="showLoginURL" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show archiving SSO login URL">
         <para role="shortdesc">Shows the domain archiving service SSO
            login URL.</para>
         <para>Remarks</para>
         <para>The retrieved URL can be used in browser to access the
            domain archiving control panel.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/company.com/archivingSSOLoginURL',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>No archiving service. Sample Message: Domain abc.com
               has no archiving service enabled.</para>
         </wadl:doc>
      </response>
   </method>
   <method id="showPublicFoldersStatus" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show 
         Exchange public folders status">
         <para role="shortdesc">Shows the Exchange public folders
            status for the domain.</para>
         <itemizedlist>
            <listitem>
               <para>Shows the Exchange public folders status for the
                  domain.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/company.com/ex/publicFolders',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;domainPublicFolders
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:domainPublicFolders"&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;/domainPublicFolders&gt;</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
   </method>
   <method id="enablePublicFolders" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Enable Exchange public folders
         feature">
         <para role="shortdesc">Enables the Exchange public folders
            feature on the domain. Once enabled, it cannot be
            disabled.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>enabled</td>
                  <td>string</td>
                  <td>Whether to enable public folders. Once enabled,
                     it cannot be disabled.</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/company.com/ex/publicFolders',
                  'text/xml', { 'enabled' =\u003E 'true' }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Public folders cannot be turned off after it's been
               turned on.. Sample Message: Public Folders cannot be
               disabled once enabled</para>
         </wadl:doc>
      </response>
   </method>
   <method id="emailEveryone" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Send an email to everyone on the domain">
         <para role="shortdesc">Sends an email to all mailboxes in the
            domain.</para>
         <para>This request Lists recipients.</para>
         <itemizedlist>
            <listitem>
               <para>Send an email to all mailboxes for the domain.
                  This request Lists recipients.</para>
            </listitem>
            <listitem>
               <para>Alternate route: /v0/domains/{domain
                  name}/emaileveryone</para>
            </listitem>
         </itemizedlist>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>fromName</td>
                  <td>string</td>
                  <td>Sender's Name</td>
               </tr>
               <tr>
                  <td>fromAddress</td>
                  <td>string</td>
                  <td>Sender's Email Address</td>
               </tr>
               <tr>
                  <td>subject</td>
                  <td>string</td>
                  <td>Message subject</td>
               </tr>
               <tr>
                  <td>body</td>
                  <td>string</td>
                  <td>Message body</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/emaileveryone',
                  'text/xml', { 'fromName' =\u003E 'John Doe',
                  'fromAddress' =\u003E 'john.doe@test.com', 'subject'
                  =\u003E 'Hi All', 'body' =\u003E 'Hello World.', }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;emailAddressList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:emailAddressList"&gt;
                  &lt;emailAddresses&gt;
                  &lt;address&gt;a@example.com&lt;/address&gt;
                  &lt;address&gt;b@example.com&lt;/address&gt;
                  &lt;/emailAddresses&gt;
                  &lt;/emailAddressList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"emailAddresses":["a@example.com","b@example.com"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="showCatchAllAddress" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show catch-all address">
         <para role="shortdesc">Shows the catch-all address for the
            domain.</para>
         <para>Returns empty string when no catch-all address set for
            the domain.</para>
         <itemizedlist>
            <listitem>
               <para>Return the catch-all address for the domain.
                  Returns empty string when no catch-all address set
                  for the domain.</para>
            </listitem>
            <listitem>
               <para>Alternate route: /v0/domains/{domain
                  name}/catchalladdress</para>
            </listitem>
         </itemizedlist>
         <para>Remarks</para>
         <para>When an email is sent to a mailbox that does not exist
            on your domain, deliver the email to this address.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/999999/domains/example.com/catchalladdress',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;emailAddress
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:emailAddress"&gt;
                  &lt;address&gt;abc@example.com&lt;/address&gt;
                  &lt;/emailAddress&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"address":"abc@example.com"}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="updateCatchAllAddress" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update catch-all address">
         <para role="shortdesc">Updates the catch-all address for the
            domain.</para>
         <itemizedlist>
            <listitem>
               <para>Edit the catch-all address for the domain.</para>
            </listitem>
            <listitem>
               <para>Alternate route: /v0/domains/{domain
                  name}/catchalladdress</para>
            </listitem>
         </itemizedlist>
         <para>Remarks</para>
         <para>When an email is sent to a mailbox that does not exist
            on your domain, deliver the email to this address.</para>
         <para xmlns="http://docbook.org/ns/docbook">Notes</para>
         <para>This request may take about 1-2 minutes to be applied
            to the domain.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>address</td>
                  <td>string</td>
                  <td>The Catch-All email address. Set address to
                     empty string to remove catch-all address.</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/emaileveryone',
                  'text/xml', { 'address' =\u003E 'abc@example.com' }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <!-- DOMAIN SPAM SETTINGS -->
   <method id="showSpamSettings" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show spam settings">
         <para role="shortdesc">Shows the spam settings for a
            domain.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The Show operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/spam/settings',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;domainSpamSettings
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:DomainSpamSettings"&gt;
                  &lt;filterLevel&gt;on&lt;/filterLevel&gt;
                  &lt;rsEmailSettings&gt;
                  &lt;spamHandling&gt;toAddress&lt;/spamHandling&gt;
                  &lt;hasFolderCleaner&gt;false&lt;/hasFolderCleaner&gt;
                  &lt;spamFolderAgeLimit&gt;0&lt;/spamFolderAgeLimit&gt;
                  &lt;spamFolderNumLimit&gt;0&lt;/spamFolderNumLimit&gt;
                  &lt;spamForwardingAddress&gt;someone@mail.com&lt;/spamForwardingAddress&gt;
                  &lt;/rsEmailSettings&gt; &lt;exchangeSettings&gt;
                  &lt;forwardToDomainQuarantine&gt;on&lt;/forwardToDomainQuarantine&gt;
                  &lt;quarantineOwner&gt;someone@mail.com&lt;/quarantineOwner&gt;
                  &lt;defaultQuarantineOwner&gt;someone@mail.com&lt;/defaultQuarantineOwner&gt;
                  &lt;/exchangeSettings&gt;
                  &lt;/domainSpamSettings&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"filterLevel":"on","rsEmailSettings":{"spamHandling":"toAddress","hasFolderCleaner":false,"spamFolderAgeLimit":0,"spamFolderNumLimit":0,"spamForwardingAddress":"someone@mail.com"},"exchangeSettings":{"forwardToDomainQuarantine":"on","quarantineOwner":"someone@mail.com","defaultQuarantineOwner":"someone@mail.com"}}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="updateSpamSettings" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update spam settings">
         <para role="shortdesc">Updates spam settings for a
            domain.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>filterLevel</td>
                  <td>string</td>
                  <td>Spam filter status, must be 'on' or 'off' or
                     'exclusive' (Required)</td>
               </tr>
               <tr>
                  <td>overrideUserSettings</td>
                  <td>boolean</td>
                  <td>Set this flag to "true" to override preferences
                     for all users regardless of their own
                     preferences. Otherwise, it sets preferences only
                     for users who have not set their own.</td>
               </tr>
               <tr>
                  <td>rsEmail.spamHandling</td>
                  <td>string</td>
                  <td>Change settings for Rackspace Email Handling.
                     For the options, see the table below.</td>
               </tr>
               <tr>
                  <td>rsEmail.hasFolderCleaner</td>
                  <td>boolean</td>
                  <td>Turns on/off Spam Folder Cleaner. Requires
                     "rsEmail.spamHandling" to be set to
                     "toFolder".</td>
               </tr>
               <tr>
                  <td>rsEmail.spamFolderAgeLimit</td>
                  <td>int</td>
                  <td>The number of days that email stays the "Spam"
                     folder before being deleted. Requires
                     "rsEmail.hasFolderCleaner" to be set to
                     "true".</td>
               </tr>
               <tr>
                  <td>rsEmail.spamFolderNumLimit</td>
                  <td>int</td>
                  <td>The max number of emails that is kept in the
                     "Spam" folder. Requires
                     "rsEmail.hasFolderCleaner" to be set to
                     "true".</td>
               </tr>
               <tr>
                  <td>rsEmail.spamForwardingAddress</td>
                  <td>string</td>
                  <td>The address that spams is forwarded to. Requires
                     "rsEmail.spamHandling" to be set to
                     "toAddress".</td>
               </tr>
               <tr>
                  <td>exchange.forwardToDomainQuarantine</td>
                  <td>string</td>
                  <td>Change settings for Exchange Handling. For the
                     options, see the table below.</td>
               </tr>
               <tr>
                  <td>exchange.quarantineOwner</td>
                  <td>string</td>
                  <td>The address that domain quarantine notifications
                     is sent to.</td>
               </tr>
               <tr>
                  <td>exchange.removeQuarantineOwner</td>
                  <td>boolean</td>
                  <td>Set this flag to "true" to remove domain
                     quarantine owner.</td>
               </tr>
               <tr>
                  <td>exchange.defaultQuarantineOwner</td>
                  <td>string</td>
                  <td>The address that quarantine notifications will
                     be sent to. This applies to new users and users
                     that have not changed their settings to
                     override.</td>
               </tr>
               <tr>
                  <td>exchange.removeDefaultQuarantineOwner</td>
                  <td>boolean</td>
                  <td>Set this flag to "true" to remove default domain
                     quarantine owner.</td>
               </tr>
            </tbody>
         </table>
         <table rules="all">
            <caption>Rackspace Email Handling Options</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Value</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>toFolder</td>
                  <td>Deliver to Spam folder</td>
               </tr>
               <tr>
                  <td>delete</td>
                  <td>Delete the email immediately</td>
               </tr>
               <tr>
                  <td>labelSubject</td>
                  <td>Include "[SPAM]" at the beginning of the subject
                     line</td>
               </tr>
               <tr>
                  <td>toAddress</td>
                  <td>Deliver to the email address that is specified
                     by "rsEmail.spamForwardingAddress"</td>
               </tr>
            </tbody>
         </table>
         <table rules="all">
            <caption>Exchange Handling Options</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Value</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>on</td>
                  <td>Send all spam to domain quarantine</td>
               </tr>
               <tr>
                  <td>off</td>
                  <td>Send spam to recipient's quarantine</td>
               </tr>
               <tr>
                  <td>nonuser</td>
                  <td>Send non-user spam (Contacts, Resources, etc.)
                     to domain quarantine</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/me/domains/example.com/spam/settings',
                  'text/xml', { 'filterLevel' =\u003E 'on',
                  'rsEmail.spamHandling' =\u003E 'toFolder',
                  'rsEmail.hasFolderCleaner' =\u003E 'true',
                  'rsEmail.spamFolderAgeLimit' =\u003E '7',
                  'rsEmail.spamFolderNumLimit' =\u003E '100', }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid input for Filter Level. Sample Message:
               Invalid FilterLevel: high. Input must be:
               on/off/exclusive</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid input for RSEmail SpamHandling. Sample
               Message: Invalid RSEmail SpamHandling: nonuser. Input
               must be: toFolder/delete/labelSubject/toAddress</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid input for Exchange
               ForwardToDomainQuarantine. Sample Message: Invalid
               input for Exchange ForwardToDomainQuarantine: delete.
               Input must be: on/off/nonuser</para>
         </wadl:doc>
      </response>
   </method>
   <method id="listBlacklistEmails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List email addresses in blacklist">
         <para role="shortdesc">Lists the email addresses in a
            blacklist associated with a domain.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/spam/blacklist',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;blacklist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:blacklist"&gt; &lt;addresses&gt;
                  &lt;address&gt;name1@spam.com&lt;/address&gt;
                  &lt;address&gt;name2@spam.com&lt;/address&gt;
                  &lt;/addresses&gt; &lt;/blacklist&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"addresses":["name1@spam.com","name2@spam.com"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="addBlacklistEmailOrDomain" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add email address or domain to blacklist">
         <para role="shortdesc">Adds an email address or domain to a
            blacklist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/spam/blacklist/anyone@spam.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered current domain. Sample Message: Adding
               example.com would blacklist the current domain</para>
         </wadl:doc>
      </response>
   </method>
   <method id="updateBlacklistEmails" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update email addresses in blacklist">
         <para role="shortdesc">Updates email addresses in a
            blacklist.</para>
         <para>Remarks</para>
         <para>You can use a '%' as a wildcard in domains, but not in
            the TLD (.com, .net, etc). You cannot use wildcards in
            email addresses. For example, the following are allowed:
            @%.example.com, @examp%.com.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>addList</td>
                  <td>string</td>
                  <td>Comma separated list of email addresses to add
                     to the list</td>
               </tr>
               <tr>
                  <td>removeList</td>
                  <td>string</td>
                  <td>Comma separated list of email addresses to
                     remove from the list</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/spam/blacklist',
                  { 'addList' =\u003E
                  '@%.example.com,abc@example.com', 'removeList'
                  =\u003E '@examp%.com' }, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="deleteBlacklistEmailsOrDomains" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete email address or domain from blacklist">
         <para role="shortdesc">Deletes an email address or domain
            from a blacklist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/spam/blacklist/anyone@yahoo.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered email address or domain is not on the
               current blacklist. Sample Message: abc@junkmail.com is
               not found on the list</para>
         </wadl:doc>
      </response>
   </method>
   <method id="listBlacklistIPs" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List IP addresses in blacklist">
         <para role="shortdesc">Lists the IP addresses in a blacklist
            associated with a domain.</para>
         <para>Remarks:</para>
         <itemizedlist>
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/spam/ipblacklist',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;ipBlacklist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:ipBlacklist"&gt; &lt;addresses&gt;
                  &lt;ip&gt;216.12.34.1&lt;/ip&gt;
                  &lt;ip&gt;216.12.34.2&lt;/ip&gt; &lt;/addresses&gt;
                  &lt;/ipBlacklist&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"addresses":["216.12.34.1","216.12.34.2"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="addBlacklistIP" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add IP address to blacklist">
         <para role="shortdesc">Adds an IP address to a
            blacklist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/spam/blacklist/216.12.34.1',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid IP address. Sample Message: invalid
               ip address: 123</para>
         </wadl:doc>
      </response>
   </method>
   <method id="updateBlacklistIPs" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update email addresses in blacklist">
         <para role="shortdesc">Updates the IP addresses in a
            blacklist.</para>
         <para>Remarks</para>
         <para>You can use a '%' as a wildcard in the last octets to
            specify IP ranges. For example: 216.12.34.%, 216.12.%.%,
            216.%.%.%.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>addList</td>
                  <td>string</td>
                  <td>Comma separated list of IP addresses to add to
                     the list</td>
               </tr>
               <tr>
                  <td>removeList</td>
                  <td>string</td>
                  <td>Comma separated list of IP addresses to remove
                     from the list</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/spam/ipblacklist',
                  { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                  'removeList' =\u003E '216.%.%.%' }, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="deleteBlacklistIP" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Deletes an IP address from blacklist">
         <para>Deletes an IP address from a blacklist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/spam/ipblacklist/216.12.34.1',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid IP address. Sample Message: invalid
               ip address: 123</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered IP is not on the current blacklist. Sample
               Message: 216.12.34.1 is not found on the
               blacklist</para>
         </wadl:doc>
      </response>
   </method>
   <method id="listSafelistEmails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Lists email addresses in safelist">
         <para role="shortdesc">Lists the email addresses in a
            safelist associated with a domain.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/spam/safelist',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;safelist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:safelist"&gt; &lt;addresses&gt;
                  &lt;address&gt;name1@notspam.com&lt;/address&gt;
                  &lt;address&gt;name2@notspam.com&lt;/address&gt;
                  &lt;/addresses&gt; &lt;/safelist&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"addresses":["name1@notspam.com","name2@notspam.com"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <!--<method id="updateSafelist" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add email address or domain to safelist">
         <para role="shortdesc">Adds an email address or domain to a
            safelist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/spam/safelist/anyone@yahoo.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
         </wadl:doc>
      </response>
   </method>-->
   <method id="updateSafelistEmail" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update email addresses in safelist">
         <para role="shortdesc">Updates email addresses in a
            safelist.</para>
         <para>Remarks</para>
         <para>You can use a '%' as a wild card in domains, but not in
            the TLD (.com, .net, etc). You cannot use wild cards in
            email addresses. For example, the following are allowed:
            @%.example.com, @examp%.com.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>addList</td>
                  <td>string</td>
                  <td>Comma separated list of email addresses to add
                     to the list</td>
               </tr>
               <tr>
                  <td>removeList</td>
                  <td>string</td>
                  <td>Comma separated list of email addresses to
                     remove from the list</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/spam/safelist',
                  { 'addList' =\u003E
                  '@%.example.com,abc@example.com', 'removeList'
                  =\u003E '@examp%.com' }, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="deleteSafelistEmailOrDomain" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete email address or domain from safelist">
         <para>Deletes an email address or domain from a
            safelist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/spam/safelist/anyone@yahoo.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered email address or domain is not on the
               current safelist. Sample Message: anyone@yahoo.com is
               not found on the list</para>
         </wadl:doc>
      </response>
   </method>
   <method id="listSafelistIPs" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List IP addresses in safelist">
         <para role="shortdesc">Lists the IP addresses in a safelist
            associated with a domain.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/spam/ipsafelist',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;ipSafelist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:ipSafelist"&gt; &lt;addresses&gt;
                  &lt;ip&gt;192.168.0.1&lt;/ip&gt;
                  &lt;ip&gt;192.168.0.2&lt;/ip&gt; &lt;/addresses&gt;
                  &lt;/ipSafelist&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"addresses":["192.168.0.1","192.168.0.2"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="addSafelistIP" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add IP address to safelist">
         <para role="shortdesc">Adds an IP address to a
            safelist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/spam/safelist/216.12.34.1',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid IP address. Sample Message: invalid
               ip address: 123</para>
         </wadl:doc>
      </response>
   </method>
   <method id="updateSafelistIPs" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update IP addresses in safelist">
         <para role="shortdesc">Updates the IP addresses in a
            safelist.</para>
         <para>Remarks</para>
         <para>You can use a '%' as a wild card in the last octets to
            specify IP ranges. For example: 216.12.34.%, 216.12.%.%,
            216.%.%.%.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>addList</td>
                  <td>string</td>
                  <td>Comma separated list of IP addresses to add to
                     the list</td>
               </tr>
               <tr>
                  <td>removeList</td>
                  <td>string</td>
                  <td>Comma separated list of IP addresses to remove
                     from the list</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/spam/ipsafelist',
                  { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                  'removeList' =\u003E '216.%.%.%' }, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="deleteSafelistIP" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete IP address from safelist">
         <para>Deletes an IP address from a safelist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/spam/ipsafelist/216.12.34.1',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid IP address. Sample Message: invalid
               ip address: 123</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered IP is not on the current safelist. Sample
               Message: 216.12.34.1 is not found on the
               safelist</para>
         </wadl:doc>
      </response>
   </method>
   <method id="addSafelistEmailOrDomain" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add email address or domain to safelist">
         <para role="shortdesc">Adds an email address or a domain to a
            safelist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/spam/safelist/anyone@yahoo.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid email address or domain. Sample
               Message: invalid email address: 123</para>
         </wadl:doc>
      </response>
   </method>
   <method id="listMailboxes" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List Rackspace email mailboxes">
         <para role="shortdesc">Lists Rackspace email mailboxes in a
            domain.</para>
         <para>Filter/Search</para>
         <para>Mailbox searches may be filtered by the 'enabled' flag
            using query methods ?enabled=true and
            ?enabled=false.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The show operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
         <para>Custom Fields</para>
         <para>The result displays each mailbox's 'name' and
            'displayName' as default. There is a query string 'fields'
            that allows the result to display more mailbox properties.
            The additional properties are: 'size', 'currentUsage',
            'enabled', 'createdDate', and 'lastLogin'</para>
         <itemizedlist>
            <title>Example</title>
            <listitem>
               <para>GET
                  '/customers/12345678/domains/example.com/rs/mailboxes?fields=size,currentUsage',
                  'text/xml'</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/rs/mailboxes',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;rsMailboxList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:rsMailboxList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;2&lt;/total&gt; &lt;rsMailboxes&gt;
                  &lt;rsMailbox&gt;
                  &lt;name&gt;apirsmailbox37&lt;/name&gt;
                  &lt;/rsMailbox&gt; &lt;rsMailbox&gt;
                  &lt;name&gt;apirsmailbox91&lt;/name&gt;
                  &lt;/rsMailbox&gt; &lt;/rsMailboxes&gt;
                  &lt;/rsMailboxList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":0,"size":50,"total":2,"rsMailboxes":[{"name":"apirsmailbox37"},{"name":"apirsmailbox91"}]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="showMailboxDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show Rackspace email mailbox details">
         <para role="shortdesc">Shows details for a specified
            Rackspace email mailbox.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The show operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;rsMailbox
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:rsMailbox"&gt;
                  &lt;name&gt;apirsmailbox37&lt;/name&gt;
                  &lt;size&gt;10240&lt;/size&gt;
                  &lt;currentUsage&gt;1024&lt;/currentUsage&gt;
                  &lt;vacationMessage&gt;My Test Vacation
                  Message&lt;/vacationMessage&gt;
                  &lt;enableVacationMessage&gt;true&lt;/enableVacationMessage&gt;
                  &lt;emailForwardingAddressList&gt;
                  &lt;emailAddress&gt;notreal0@apidomain.net&lt;/emailAddress&gt;
                  &lt;emailAddress&gt;notreal1@apidomain.net&lt;/emailAddress&gt;
                  &lt;/emailForwardingAddressList&gt;
                  &lt;saveForwardedEmail&gt;false&lt;/saveForwardedEmail&gt;
                  &lt;lastLogin&gt;2/12/2009 1:00:00
                  AM&lt;/lastLogin&gt; &lt;createdDate&gt;4/10/2006
                  7:47:34 PM&lt;/createdDate&gt;
                  &lt;visibleInRackspaceEmailCompanyDirectory&gt;false&lt;/visibleInRackspaceEmailCompanyDirectory&gt;
                  &lt;visibleInExchangeGAL&gt;false&lt;/visibleInExchangeGAL&gt;
                  &lt;contactInfo&gt;
                  &lt;lastName&gt;Testlast&lt;/lastName&gt;
                  &lt;firstName&gt;Jayfirst&lt;/firstName&gt;
                  &lt;generationQualifier&gt;Jr&lt;/generationQualifier&gt;
                  &lt;initials&gt;A&lt;/initials&gt;
                  &lt;organizationUnit&gt;IT&lt;/organizationUnit&gt;
                  &lt;businessStreet&gt;123 Biz
                  St&lt;/businessStreet&gt;
                  &lt;businessCity&gt;Blacksburg&lt;/businessCity&gt;
                  &lt;businessState&gt;VA&lt;/businessState&gt;
                  &lt;businessPostalCode&gt;24060&lt;/businessPostalCode&gt;
                  &lt;businessCountry&gt;USA&lt;/businessCountry&gt;
                  &lt;homeStreet&gt;456 Home St&lt;/homeStreet&gt;
                  &lt;homeCity&gt;Charlotte&lt;/homeCity&gt;
                  &lt;homeState&gt;NC&lt;/homeState&gt;
                  &lt;homePostalCode&gt;28210&lt;/homePostalCode&gt;
                  &lt;homeCountry&gt;USA&lt;/homeCountry&gt;
                  &lt;businessNumber&gt;555.123.0001&lt;/businessNumber&gt;
                  &lt;homeNumber&gt;555.123.0003&lt;/homeNumber&gt;
                  &lt;mobileNumber&gt;555.123.0004&lt;/mobileNumber&gt;
                  &lt;faxNumber&gt;555.123.0005&lt;/faxNumber&gt;
                  &lt;homeFaxNumber&gt;555.123.0006&lt;/homeFaxNumber&gt;
                  &lt;pagerNumber&gt;555.123.0002&lt;/pagerNumber&gt;
                  &lt;notes&gt;This is my note about my
                  mailbox.&lt;/notes&gt; &lt;title&gt;My
                  Title&lt;/title&gt;
                  &lt;userID&gt;J.Test&lt;/userID&gt;
                  &lt;customID&gt;0123456789&lt;/customID&gt;
                  &lt;organizationalStatus&gt;OrgStatus&lt;/organizationalStatus&gt;
                  &lt;employeeType&gt;Full-Time&lt;/employeeType&gt;
                  &lt;/contactInfo&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;/rsMailbox&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"emailForwardingAddressList":["test@resellerallservices.net"],"enableVacationMessage":true,"enabled":true,"contactInfo":{"businessNumber":"555.123.0001"
                  ,"faxNumber":"555.123.0005" ,"firstName":"Jimmy"
                  ,"homeNumber":"555.123.0003" ,"lastName":"TestLaste"
                  ,"mobileNumber":"555.123.0004" ,"notes":"This is my
                  note about my mailbox."
                  ,"pagerNumber":"555.123.0002" ,"businessCity":""
                  ,"businessCountry":"" ,"businessPostalCode":""
                  ,"businessState":"" ,"businessStreet":""
                  ,"employeeType":"DoesNotExist"
                  ,"generationQualifier":"Jr" ,"homeCity":""
                  ,"homeCountry":"" ,"homeFaxNumber":"555.123.0006"
                  ,"homePostalCode":"" ,"homeState":""
                  ,"homeStreet":"" ,"initials":"A"
                  ,"organizationUnit":"IT"
                  ,"organizationalStatus":"gainfully employed"
                  ,"title":"My Title" ,"userID":"J.Test",
                  "customID":"0123456789"},"name":"unittestexist"
                  ,"saveForwardedEmail":false,"size":10240,"vacationMessage":"Test
                  Vacation Message", "createdDate":"4\/10\/2006
                  7:47:34 PM", "currentUsage":1024,
                  "visibleInExchangeGAL":false,
                  "visibleInRackspaceEmailCompanyDirectory":false}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="addMailbox" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add Rackspace email mailbox">
         <para role="shortdesc">Adds a Rackspace email mailbox.</para>
         <para>To add a mailbox, use these form fields:</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>password</td>
                  <td>string</td>
                  <td>Password (Required for Add)</td>
               </tr>
               <tr>
                  <td>size</td>
                  <td>positive integer</td>
                  <td>Mailbox size in megabytes (Required for
                     Add)</td>
               </tr>
               <tr>
                  <td>enableVacationMessage</td>
                  <td>boolean</td>
                  <td>indicates whether vacation message has been
                     enabled</td>
               </tr>
               <tr>
                  <td>vacationMessage</td>
                  <td>string</td>
                  <td>A mailbox's vacation message</td>
               </tr>
               <tr>
                  <td>emailForwardingAddresses</td>
                  <td>string</td>
                  <td>A comma delimited list, Maximum 15 addresses, 4
                     of which can be outside of this domain</td>
               </tr>
               <tr>
                  <td>saveForwardedEmail</td>
                  <td>string</td>
                  <td>Indicates whether to save a copy of any
                     forwarded email</td>
               </tr>
               <tr>
                  <td>lastName</td>
                  <td>string</td>
                  <td>A last name</td>
               </tr>
               <tr>
                  <td>firstName</td>
                  <td>string</td>
                  <td>A first name</td>
               </tr>
               <tr>
                  <td>generationQualifier</td>
                  <td>string</td>
                  <td>A person's generation (ex. Jr., Sr., III)</td>
               </tr>
               <tr>
                  <td>initials</td>
                  <td>string</td>
                  <td>A person's middle initial</td>
               </tr>
               <tr>
                  <td>organizationUnit</td>
                  <td>string</td>
                  <td>A person's organization unit (ex.
                     Marketing)</td>
               </tr>
               <tr>
                  <td>businessNumber</td>
                  <td>string</td>
                  <td>Business phone number</td>
               </tr>
               <tr>
                  <td>pagerNumber</td>
                  <td>string</td>
                  <td>Pager phone number</td>
               </tr>
               <tr>
                  <td>homeNumber</td>
                  <td>string</td>
                  <td>Home phone number</td>
               </tr>
               <tr>
                  <td>mobileNumber</td>
                  <td>string</td>
                  <td>Mobile phone number</td>
               </tr>
               <tr>
                  <td>faxNumber</td>
                  <td>string</td>
                  <td>Fax phone number</td>
               </tr>
               <tr>
                  <td>homeFaxNumber</td>
                  <td>string</td>
                  <td>Home Fax phone number</td>
               </tr>
               <tr>
                  <td>businessStreet</td>
                  <td>string</td>
                  <td>The business street address for a contact</td>
               </tr>
               <tr>
                  <td>businessCity</td>
                  <td>string</td>
                  <td>The business city for a contact</td>
               </tr>
               <tr>
                  <td>businessState</td>
                  <td>string</td>
                  <td>The business state for a contact</td>
               </tr>
               <tr>
                  <td>businessPostalCode</td>
                  <td>string</td>
                  <td>The business postal code/zip code for a
                     contact</td>
               </tr>
               <tr>
                  <td>businessCountry</td>
                  <td>string</td>
                  <td>The business country for a contact</td>
               </tr>
               <tr>
                  <td>homeStreet</td>
                  <td>string</td>
                  <td>The home street address for a contact</td>
               </tr>
               <tr>
                  <td>homeCity</td>
                  <td>string</td>
                  <td>The home city for a contact</td>
               </tr>
               <tr>
                  <td>homeState</td>
                  <td>string</td>
                  <td>The home state for a contact</td>
               </tr>
               <tr>
                  <td>homePostalCode</td>
                  <td>string</td>
                  <td>The home postal code/zip code for a contact</td>
               </tr>
               <tr>
                  <td>homeCountry</td>
                  <td>string</td>
                  <td>The home country for a contact</td>
               </tr>
               <tr>
                  <td>notes</td>
                  <td>string</td>
                  <td>Any notes for the mailbox</td>
               </tr>
               <tr>
                  <td>title</td>
                  <td>string</td>
                  <td>A contact's title</td>
               </tr>
               <tr>
                  <td>userID</td>
                  <td>string</td>
                  <td>A user ID for a contact</td>
               </tr>
               <tr>
                  <td>organizationalStatus</td>
                  <td>string</td>
                  <td>A contact's organization status</td>
               </tr>
               <tr>
                  <td>employeeType</td>
                  <td>string</td>
                  <td>A contact's employee type</td>
               </tr>
               <tr>
                  <td>customID</td>
                  <td>string</td>
                  <td>A custom field that can be used to tie user
                     mailboxes to external user systems</td>
               </tr>
               <tr>
                  <td>enabled</td>
                  <td>boolean</td>
                  <td>Status of the mailbox: true = enabled, false =
                     disabled.</td>
               </tr>
               <tr>
                  <td>visibleInRackspaceEmailCompanyDirectory</td>
                  <td>boolean</td>
                  <td>Flag indicating whether the mailbox is visible
                     in the company directory</td>
               </tr>
               <tr>
                  <td>visibleInExchangeGAL</td>
                  <td>boolean</td>
                  <td>Flag indicating whether the mailbox is visible
                     in the Exchange Global Address List</td>
               </tr>
               <tr>
                  <td>currentUsage <i
                        xmlns="http://www.w3.org/1999/xhtml">
                        <b>(read only)</b>
                     </i>
                  </td>
                  <td>positive integer</td>
                  <td>Current space used in mailbox (in MB)</td>
               </tr>
               <tr>
                  <td>createdDate <i
                        xmlns="http://www.w3.org/1999/xhtml">
                        <b>(read only)</b>
                     </i>
                  </td>
                  <td>string</td>
                  <td>Date of mailbox creation, EST Time (in string
                     format)</td>
               </tr>
               <tr>
                  <td>lastLogin <i
                        xmlns="http://www.w3.org/1999/xhtml">
                        <b>(read only)</b>
                     </i>
                  </td>
                  <td>string</td>
                  <td>Date of last login, EST Time (in string
                     format)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                  'text/xml', { 'password' =\u003E 'Secret13!@#',
                  'size' =\u003E '2048', 'enableVacationMessage'
                  =\u003E 'true', 'vacationMessage' =\u003E 'My
                  Vacation Message', 'emailForwardingAddresses'
                  =\u003E
                  'sampletest@example.com,sampletest2@example.com',
                  'saveForwardedEmail' =\u003E 'false' 'lastName'
                  =\u003E 'Testlastname', 'firstName' =\u003E 'Jay',
                  'generationQualifier' =\u003E 'III', 'initials'
                  =\u003E 'A', 'organizationUnit' =\u003E 'IT',
                  'businessStreet' =\u003E '123 Biz St.',
                  'businessCity' =\u003E 'Blacksburg', 'businessState'
                  =\u003E 'VA', 'businessPostalCode' =\u003E '24060',
                  'businessCountry' =\u003E 'USA', 'homeStreet'
                  =\u003E '456 Home St.', 'homeCity' =\u003E
                  'Charlotte', 'homeState' =\u003E 'NC',
                  'homePostalCode' =\u003E '28210', 'homeCountry'
                  =\u003E 'USA', 'notes' =\u003E 'This is my note
                  about my mailbox.', 'title' =\u003E 'My Title',
                  'userID' =\u003E 'J.Test', 'customID' =\u003E
                  '0123456789', 'organizationalStatus' =\u003E
                  'OrgStatus', 'employeeType' =\u003E 'Full-Time'
                  'visibleInExchangeGAL'=\u003E'true',
                  'visibleInRackspaceEmailCompanyDirectory' =\u003E
                  'false' }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="updateMailbox" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update Rackspace mailbox">
         <para role="shortdesc">Updates a Rackspace mailbox.</para>
         <para>To add a mailbox, use these form fields:</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>password</td>
                  <td>string</td>
                  <td>Password (Required for Add)</td>
               </tr>
               <tr>
                  <td>size</td>
                  <td>positive integer</td>
                  <td>Mailbox size in megabytes (Required for
                     Add)</td>
               </tr>
               <tr>
                  <td>enableVacationMessage</td>
                  <td>boolean</td>
                  <td>indicates whether vacation message has been
                     enabled</td>
               </tr>
               <tr>
                  <td>vacationMessage</td>
                  <td>string</td>
                  <td>A mailbox's vacation message</td>
               </tr>
               <tr>
                  <td>emailForwardingAddresses</td>
                  <td>string</td>
                  <td>A comma delimited list, Maximum 15 addresses, 4
                     of which can be outside of this domain</td>
               </tr>
               <tr>
                  <td>saveForwardedEmail</td>
                  <td>string</td>
                  <td>Indicates whether to save a copy of any
                     forwarded email</td>
               </tr>
               <tr>
                  <td>lastName</td>
                  <td>string</td>
                  <td>A last name</td>
               </tr>
               <tr>
                  <td>firstName</td>
                  <td>string</td>
                  <td>A first name</td>
               </tr>
               <tr>
                  <td>generationQualifier</td>
                  <td>string</td>
                  <td>A person's generation (ex. Jr., Sr., III)</td>
               </tr>
               <tr>
                  <td>initials</td>
                  <td>string</td>
                  <td>A person's middle initial</td>
               </tr>
               <tr>
                  <td>organizationUnit</td>
                  <td>string</td>
                  <td>A person's organization unit (ex.
                     Marketing)</td>
               </tr>
               <tr>
                  <td>businessNumber</td>
                  <td>string</td>
                  <td>Business phone number</td>
               </tr>
               <tr>
                  <td>pagerNumber</td>
                  <td>string</td>
                  <td>Pager phone number</td>
               </tr>
               <tr>
                  <td>homeNumber</td>
                  <td>string</td>
                  <td>Home phone number</td>
               </tr>
               <tr>
                  <td>mobileNumber</td>
                  <td>string</td>
                  <td>Mobile phone number</td>
               </tr>
               <tr>
                  <td>faxNumber</td>
                  <td>string</td>
                  <td>Fax phone number</td>
               </tr>
               <tr>
                  <td>homeFaxNumber</td>
                  <td>string</td>
                  <td>Home Fax phone number</td>
               </tr>
               <tr>
                  <td>businessStreet</td>
                  <td>string</td>
                  <td>The business street address for a contact</td>
               </tr>
               <tr>
                  <td>businessCity</td>
                  <td>string</td>
                  <td>The business city for a contact</td>
               </tr>
               <tr>
                  <td>businessState</td>
                  <td>string</td>
                  <td>The business state for a contact</td>
               </tr>
               <tr>
                  <td>businessPostalCode</td>
                  <td>string</td>
                  <td>The business postal code/zip code for a
                     contact</td>
               </tr>
               <tr>
                  <td>businessCountry</td>
                  <td>string</td>
                  <td>The business country for a contact</td>
               </tr>
               <tr>
                  <td>homeStreet</td>
                  <td>string</td>
                  <td>The home street address for a contact</td>
               </tr>
               <tr>
                  <td>homeCity</td>
                  <td>string</td>
                  <td>The home city for a contact</td>
               </tr>
               <tr>
                  <td>homeState</td>
                  <td>string</td>
                  <td>The home state for a contact</td>
               </tr>
               <tr>
                  <td>homePostalCode</td>
                  <td>string</td>
                  <td>The home postal code/zip code for a contact</td>
               </tr>
               <tr>
                  <td>homeCountry</td>
                  <td>string</td>
                  <td>The home country for a contact</td>
               </tr>
               <tr>
                  <td>notes</td>
                  <td>string</td>
                  <td>Any notes for the mailbox</td>
               </tr>
               <tr>
                  <td>title</td>
                  <td>string</td>
                  <td>A contact's title</td>
               </tr>
               <tr>
                  <td>userID</td>
                  <td>string</td>
                  <td>A user ID for a contact</td>
               </tr>
               <tr>
                  <td>organizationalStatus</td>
                  <td>string</td>
                  <td>A contact's organization status</td>
               </tr>
               <tr>
                  <td>employeeType</td>
                  <td>string</td>
                  <td>A contact's employee type</td>
               </tr>
               <tr>
                  <td>customID</td>
                  <td>string</td>
                  <td>A custom field that can be used to tie user
                     mailboxes to external user systems</td>
               </tr>
               <tr>
                  <td>enabled</td>
                  <td>boolean</td>
                  <td>Status of the mailbox: true = enabled, false =
                     disabled.</td>
               </tr>
               <tr>
                  <td>visibleInRackspaceEmailCompanyDirectory</td>
                  <td>boolean</td>
                  <td>Flag indicating whether the mailbox is visible
                     in the company directory</td>
               </tr>
               <tr>
                  <td>visibleInExchangeGAL</td>
                  <td>boolean</td>
                  <td>Flag indicating whether the mailbox is visible
                     in the Exchange Global Address List</td>
               </tr>
               <tr>
                  <td>currentUsage <i
                        xmlns="http://www.w3.org/1999/xhtml">
                        <b>(read only)</b>
                     </i>
                  </td>
                  <td>positive integer</td>
                  <td>Current space used in mailbox (in MB)</td>
               </tr>
               <tr>
                  <td>createdDate <i
                        xmlns="http://www.w3.org/1999/xhtml">
                        <b>(read only)</b>
                     </i>
                  </td>
                  <td>string</td>
                  <td>Date of mailbox creation, EST Time (in string
                     format)</td>
               </tr>
               <tr>
                  <td>lastLogin <i
                        xmlns="http://www.w3.org/1999/xhtml">
                        <b>(read only)</b>
                     </i>
                  </td>
                  <td>string</td>
                  <td>Date of last login, EST Time (in string
                     format)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                  'text/xml', { 'password' =\u003E 'Secret13!@#',
                  'size' =\u003E '2048', 'enableVacationMessage'
                  =\u003E 'true', 'vacationMessage' =\u003E 'My
                  Vacation Message', 'emailForwardingAddresses'
                  =\u003E
                  'sampletest@example.com,sampletest2@example.com',
                  'saveForwardedEmail' =\u003E 'false' 'lastName'
                  =\u003E 'Testlastname', 'firstName' =\u003E 'Jay',
                  'generationQualifier' =\u003E 'III', 'initials'
                  =\u003E 'A', 'organizationUnit' =\u003E 'IT',
                  'businessStreet' =\u003E '123 Biz St.',
                  'businessCity' =\u003E 'Blacksburg', 'businessState'
                  =\u003E 'VA', 'businessPostalCode' =\u003E '24060',
                  'businessCountry' =\u003E 'USA', 'homeStreet'
                  =\u003E '456 Home St.', 'homeCity' =\u003E
                  'Charlotte', 'homeState' =\u003E 'NC',
                  'homePostalCode' =\u003E '28210', 'homeCountry'
                  =\u003E 'USA', 'notes' =\u003E 'This is my note
                  about my mailbox.', 'title' =\u003E 'My Title',
                  'userID' =\u003E 'J.Test', 'customID' =\u003E
                  '0123456789', 'organizationalStatus' =\u003E
                  'OrgStatus', 'employeeType' =\u003E 'Full-Time'
                  'visibleInExchangeGAL'=\u003E'true',
                  'visibleInRackspaceEmailCompanyDirectory' =\u003E
                  'false' } " });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="deleteMailbox" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete Rackspace email mailbox">
         <para role="shortdesc">Deletes a Rackspace email
            mailbox.</para>
         <para>Remarks</para>
         <para>The mailbox and mailbox contents are deleted
            permanently.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="generateLoginTokenMailbox" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Create login token for Rackspace email mailbox">
         <para role="shortdesc">Creates a login token that a user can
            use to log in to a Rackspace email mailbox.</para>
         <para>This operation returns a login token, created date, and
            expiration date.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The login token is valid until the current time
                  (EST) passes the expiration date, and can be used
                  until that point.</para>
            </listitem>
            <listitem>
               <para>Using the generate login token shown in the
                  example below, a user can SSO into
                  testmailbox@testapidomain.net at the following URL:
                  https://{webmail
                  address}/mail/src/redirect.php?user_name={testmailbox@testapidomain.net}&amp;emailaddress=testmailbox@testapidomain.net&amp;sessionID=5b5e27419a363fc5b65bbb63d1c2d3f8</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/460896/domains/testapidomain.net/rs/mailboxes/testmailbox/loginToken',
                  {}, 'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;rsMailboxLoginToken
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:rsMailboxLoginToken"&gt;
                  &lt;token&gt;5b5e27419a363fc5b65bbb63d1c2d3f8&lt;/token&gt;
                  &lt;dateCreated&gt;9/22/2010 9:33:15
                  AM&lt;/dateCreated&gt;
                  &lt;expirationDate&gt;9/22/2010 9:53:14
                  AM&lt;/expirationDate&gt;
                  &lt;/rsMailboxLoginToken&gt;</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
   </method>
   <method id="listMobileSyncUsers" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List Mobile Sync users">
         <para role="shortdesc">Lists Mobile Sync users in a
            domain.</para>
         <para>This list contains all potential users of Mobile Sync
            and their current status (enabled/disabled).</para>
         <para>Filter/Search</para>
         <para>Searches may be filtered by the 'name' property using
            query methods ?startsWith= or ?contains=.</para>
         <para xmlns="http://docbook.org/ns/docbook">Ordering</para>
         <para>Searches may be ordered by any of their properties. You
            can order by multiple properties. Some examples
            are:</para>
         <itemizedlist>
            <listitem>
               <para>?order=Name%20asc (Order by name
                  ascending)</para>
            </listitem>
            <listitem>
               <para>?order=Enabled%20desc (Order by enabled
                  descending)</para>
            </listitem>
            <listitem>
               <para>?order[0]=Name%20desc&amp;order[1]=Enabled%20asc
                  (Order by name descending then enabled
                  ascending)</para>
            </listitem>
         </itemizedlist>
         <para>Note: It is important to capitalize the first letter of
            the property.</para>
         <para xmlns="http://docbook.org/ns/docbook">Paging</para>
         <para>Searches may be paged using ?size= and/or ?offset=.
            Some examples are:</para>
         <itemizedlist>
            <listitem>
               <para>?size=3 (Return a maximum of 3 results)</para>
            </listitem>
            <listitem>
               <para>?offset=2 (Return results starting with the 3rd
                  entry)</para>
            </listitem>
            <listitem>
               <para>?size=5&amp;offset=5 (Return 5 results starting
                  with the 6th entry)</para>
            </listitem>
         </itemizedlist>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/mobilesync/users?startsWith=a\u0026size=50\u0026offset=100\u0026order=Enabled%20asc',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;mobileSyncUserList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:mobileSyncUserList"&gt;
                  &lt;offset&gt;100&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;1000&lt;/total&gt; &lt;users&gt;
                  &lt;user&gt; &lt;name&gt;alex&lt;/name&gt;
                  &lt;domain&gt;example.com&lt;/domain&gt;
                  &lt;enabled&gt;false&lt;/enabled&gt;
                  &lt;details&gt;&lt;/details&gt; &lt;/user&gt;
                  &lt;user&gt; &lt;name&gt;ann&lt;/name&gt;
                  &lt;domain&gt;example.com&lt;/domain&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;details&gt;&lt;/details&gt; &lt;/user&gt;
                  &lt;/users&gt;
                  &lt;/mobileSyncUserList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":100,"size":50,"total":1000,"users":[{"details":null,"domain":"example.com","enabled":false,"name":"alex"},{"details":null,"domain":"example.com","enabled":true,"name":"ann"}]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="enableMobileSync" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Enable Mobile Sync">
         <para role="shortdesc">Enables the Mobile Sync feature for
            users.</para>
         <para>Special Considerations</para>
         <itemizedlist>
            <listitem>
               <para>Enabling Mobile Sync for a user will increase
                  your monthly bill.</para>
            </listitem>
            <listitem>
               <para>This is a throttled operation. Send as many users
                  as you can at once instead of making the call
                  multiple times, once per user.</para>
            </listitem>
            <listitem>
               <para>The maximum number of users per request is
                  250.</para>
            </listitem>
         </itemizedlist>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>users</td>
                  <td>String array</td>
                  <td>Comma-separated list of user names to
                     enable/disable</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/mobilesync/users/enable',
                  'text/xml', { 'users' =\u003E 'user1,user2,user3' }
                  " });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="disableMobileSync" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Disable Mobile Sync">
         <para role="shortdesc">Disables the Mobile Sync feature for
            users.</para>
         <para>Special Considerations</para>
         <itemizedlist>
            <listitem>
               <para>Enabling Mobile Sync for a user will increase
                  your monthly bill.</para>
            </listitem>
            <listitem>
               <para>This is a throttled operation. Send as many users
                  as you can at once instead of making the call
                  multiple times, once per user.</para>
            </listitem>
            <listitem>
               <para>The maximum number of users per request is
                  250.</para>
            </listitem>
         </itemizedlist>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>users</td>
                  <td>String array</td>
                  <td>Comma-separated list of user names to
                     enable/disable</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/mobilesync/users/disable',
                  'text/xml', { 'users' =\u003E 'user1,user2,user3' }
                  " });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="showDomainAutoProvisionSetting" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show auto-provisioning setting">
         <para role="shortdesc">Shows the auto-provisioning setting
            for a domain.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/mobilesync',
                  'text/xml'\u003C 200" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;mobileSyncDomainInfo
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:mobileSyncDomainInfo"&gt;
                  &lt;autoProvision&gt;false&lt;/autoProvision&gt;
                  &lt;/mobileSyncDomainInfo&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"autoProvision":true}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="setMobileSyncAutoProvision" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Enable or disable Mobile Sync auto-provisioning">
         <para role="shortdesc">Enables or disables Mobile Sync
            auto-provisioning for a domain.</para>
         <para>Special Considerations</para>
         <itemizedlist>
            <listitem>
               <para>Enabling Mobile Sync auto-provisioning will add
                  Mobile Sync to all existing Rackspace Email
                  mailboxes on the domain. Any new Rackspace Email
                  mailbox will have Mobile Sync as well.</para>
            </listitem>
            <listitem>
               <para>Disabling Mobile Sync auto-provisioning will only
                  prevent new mailboxes having Mobile Sync when they
                  are created. It will not disable Mobile Sync for the
                  existing mailboxes. New mailboxes can still add
                  Mobile Sync later.</para>
            </listitem>
         </itemizedlist>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>autoProvision</td>
                  <td>Boolean</td>
                  <td>'True' for enable and 'False' for disable</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/mobilesync',
                  'text/xml', { 'autoProvision' =\u003E 'True' } "
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="showMailboxSpamSettings" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show mailbox spam settings">
         <para role="shortdesc">Shows the mailbox spam
            settings.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  /customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/settings',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;rsMailboxSpamSetting
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:RSMailboxSpamSetting"&gt;
                  &lt;filterLevel&gt;on&lt;/filterLevel&gt;
                  &lt;rsEmailSettings&gt;
                  &lt;spamHandling&gt;toFolder&lt;/spamHandling&gt;
                  &lt;hasFolderCleaner&gt;false&lt;/hasFolderCleaner&gt;
                  &lt;spamFolderAgeLimit&gt;0&lt;/spamFolderAgeLimit&gt;
                  &lt;spamFolderNumLimit&gt;0&lt;/spamFolderNumLimit&gt;
                  &lt;spamForwardingAddress /&gt;
                  &lt;/rsEmailSettings&gt;
                  &lt;/rsMailboxSpamSetting&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"filterLevel":"on","rsEmailSettings":"hasFolderCleaner":false,"spamFolderAgeLimit":0,"spamFolderNumLimit":0,"spamForwardingAddress":"","spamHandling":"toFolder"}}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>
   <method id="updateMailboxSpamSettings" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update spam settings">
         <para role="shortdesc">Updates the mailbox spam
            settings.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>filterLevel</td>
                  <td>string</td>
                  <td>This is a required field. Spam filter status:
                     'on', 'off', or 'exclusive'. Exclusive mode
                     allows only email cleared by the Safelist.</td>
               </tr>
               <tr>
                  <td>rsEmail.spamHandling</td>
                  <td>string</td>
                  <td><para>The string 'toFolder' will deliver the
                        email to the user's Spam folder, 'delete' will
                        delete the mail immediately, 'labelSubject'
                        will prepend [SPAM] to the email's subject
                        line, and 'toAddress' will send the email to a
                        specified folder instead.</para><para>Valid
                        Field Combinations:</para>
                     <para>(toFolder =&gt; hasFolderCleaner,
                        spamFolderAgeLimit, spamFolderNumLimit)</para>
                     <para>(toAddress =&gt;
                        spamForwardingAddress)</para>
                  </td>
               </tr>
               <tr>
                  <td>rsEmail.hasFolderCleaner</td>
                  <td>string</td>
                  <td><para>This field is effective when
                        rsEmail.spamHandling option is set to
                        'toFolder'. This field controls how the spam
                        that is delivered o the spam folder is
                        handled. There are currently two options
                        supported for handling spam. First option is
                        to set a limit after which the spam gets
                        deleted. One can set limit on the number of
                        days or on the number of spam emails. Second
                        option is to never automatically delete the
                        spam. For both these options to be enabled the
                        rsEmail.hasFolderCleaner field should be set
                        to 'true'.</para>
                     <para>The folder cleaner fields
                        (hasFolderCleaner, spamFolderAgeLimit,
                        spamFolderNumLimit) are allowed only when the
                        spamHandling field is set to 'toFolder'. In
                        order to never delete the spam set the
                        spamFolderAgeLimit and spamFolderNumLimit
                        fields to 0.</para>
                  </td>
               </tr>
               <tr>
                  <td>rsEmail.spamFolderAgeLimit</td>
                  <td>string</td>
                  <td>The number of days a message stays in the Spam
                     folder before its deleted. This field is
                     effective only when rsEmail.spamHandling is set
                     to 'toFolder', and 'rs.hasFolderCleaner' is set
                     to 'true'. This field cannot have negative
                     value.</td>
               </tr>
               <tr>
                  <td>rsEmail.spamFolderNumLimit</td>
                  <td>string</td>
                  <td>The maximum number of emails the Spam folder
                     holds. This field is effective only when
                     rsEmail.spamHandling is set to 'toFolder', and
                     'rs.hasFolderCleaner' is set to 'true'. This
                     field cannot have negative value.</td>
               </tr>
               <tr>
                  <td>rsEmail.spamForwardingAddress</td>
                  <td>string</td>
                  <td>The email address that Spam emails is redirected
                     to. This field is required when the spamHandling
                     field is set to 'toAddress'</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/100018/domains/resellerallservices.net/rs/mailboxes/unittestexist/spam/settings',
                  { 'filterLevel' =\u003E 'on', 'rsEmail.spamHandling'
                  =\u003E 'toFolder', 'rsEmail.hasFolderCleaner'
                  =\u003E 'true', 'rsEmail.spamFolderAgeLimit' =\u003E
                  '7', 'rsEmail.spamFolderNumLimit' =\u003E '100', },
                  Formats.xml" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid input for form field 'filterLevel'. Sample
               Message: Invalid FilterLevel: high. Input must be:
               on/off/exclusive</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid input for form field 'spamHandling'. Sample
               Message: Invalid RSEmail SpamHandling: Input must be:
               toFolder/delete/labelSubject/toAddress</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid email address in spam forwarding address.
               Sample Message: Invalid email address</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Empty forwarding address. Sample Message: Spam
               Forwarding Address cannot be empty for spam handling
               policy: toAddress</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid value for field 'spamFolderAgeLimit'. Sample
               Message: Invalid RSEmail SpamCleanupOption: -1.
               rsEmail.spamFolderAgeLimit should be
               non-negative</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid value for field 'spamFolderNumLimit'. Sample
               Message: Invalid RSEmail SpamCleanupOption: -1.
               rsEmail.spamNumberLimit should be non-negative.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid field combination. Sample Message: Invalid
               field combination: Folder cleaner options cannot be
               specified with spam handling policy: delete.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid field combination. Sample Message: Invalid
               field combination: Folder cleaner options cannot be
               specified with spam handling policy:
               labelSubject.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Invalid field combination. Sample Message: Invalid
               field combination: Folder cleaner options cannot be
               specified with spam handling policy: toAddress.</para>
         </wadl:doc>
      </response>
   </method>


   <method id="listMailboxBlacklistEmails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List email addresses in mailbox blacklist">
         <para role="shortdesc">Lists the email addresses in a
            blacklist associated with a mailbox.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/blacklist',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;blacklist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:blacklist"&gt; &lt;addresses&gt;
                  &lt;address&gt;name1@spam.com&lt;/address&gt;
                  &lt;address&gt;name2@spam.com&lt;/address&gt;
                  &lt;/addresses&gt; &lt;/blacklist&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"addresses":["name1@spam.com","name2@spam.com"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>


   <!-- <method id="addBlacklistEmailOrDomain" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add email address or domain to blacklist">
         <para role="shortdesc">Adds an email address or domain to a
            blacklist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/blacklist/anyone@spam.com',
                  {},'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid email address or domain. Sample Message:
               invalid email address: abc</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered current domain. Sample Message: Adding
               example.com would blacklist the current domain</para>
         </wadl:doc>
      </response>
   </method>-->


   <method id="updateMailboxBlacklistEmails" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update email addresses in blacklist">
         <para role="shortdesc">Updates the email addresses in a
            blacklist.</para>
         <para>Remarks</para>
         <para>You can use a '%' as a wildcard in domains, but not in
            the TLD (.com, .net, etc). You cannot use wildcards in
            email addresses. For example, the following are allowed:
            @%.example.com, @examp%.com.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>addList</td>
                  <td>string</td>
                  <td>Comma separated list of email addresses to add
                     to the list</td>
               </tr>
               <tr>
                  <td>removeList</td>
                  <td>string</td>
                  <td>Comma separated list of email addresses to
                     remove from the list</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/blacklist',
                  { 'addList' =\u003E
                  '@%.example.com,abc@example.com', 'removeList'
                  =\u003E '@examp%.com' }, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="deleteMailboxBlacklistEmailOrDomain" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete email address or domain from blacklist">
         <para role="shortdesc">Deletes an email address or domain
            from a blacklist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/blacklist/anyone@yahoo.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered email address or domain is not on the
               current blacklist. Sample Message: abc@junkmail.com is
               not found on the list</para>
         </wadl:doc>
      </response>
   </method>

   <method id="listMailboxBlacklistIPs" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List IP addresses in mailbox blacklist">
         <para role="shortdesc">Lists the IP addresses in a blacklist
            associated with a mailbox.</para>
         <para>Remarks:</para>
         <itemizedlist>
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipblacklist',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;ipBlacklist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:ipBlacklist"&gt; &lt;addresses&gt;
                  &lt;ip&gt;216.12.34.1&lt;/ip&gt;
                  &lt;ip&gt;216.12.34.2&lt;/ip&gt; &lt;/addresses&gt;
                  &lt;/ipBlacklist&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"addresses":["216.12.34.1","216.12.34.2"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="addMailboxBlacklistIP" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add IP address to blacklist">
         <para role="shortdesc">Adds an IP address to a
            blacklist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/blacklist/216.12.34.1',
                  {},'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid IP address. Sample Message: invalid
               ip address: 123</para>
         </wadl:doc>
      </response>
   </method>

   <method id="updateMailboxBlacklistIPs" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update IP addresses in blacklist">
         <para role="shortdesc">Updates IP addresses in a
            blacklist.</para>
         <para>Remarks</para>
         <para>You can use a '%' as a wildcard in the last octets to
            specify IP ranges. For example: 216.12.34.%, 216.12.%.%,
            216.%.%.%.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>addList</td>
                  <td>string</td>
                  <td>Comma separated list of IP addresses to add to
                     the list</td>
               </tr>
               <tr>
                  <td>removeList</td>
                  <td>string</td>
                  <td>Comma separated list of IP addresses to remove
                     from the list</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/ipblacklist',
                  { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                  'removeList' =\u003E '216.%.%.%' }, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="deleteMailboxBlacklistIP" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete IP address from blacklist">
         <para role="shortdesc">Deletes an IP address from a
            blacklist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipblacklist/216.12.34.1',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered IP is not on the current blacklist. Sample
               Message: 216.12.34.1 is not found on the
               blacklist</para>
         </wadl:doc>
      </response>
   </method>

   <method id="listMailboxSafelistEmails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List email addresses in mailbox safelist">
         <para role="shortdesc">Lists email addresses in a mailbox
            safelist.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/safelist',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;safelist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:safelist"&gt; &lt;addresses&gt;
                  &lt;address&gt;name1@notspam.com&lt;/address&gt;
                  &lt;address&gt;name2@notspam.com&lt;/address&gt;
                  &lt;/addresses&gt; &lt;/safelist&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"addresses":["name1@notspam.com","name2@notspam.com"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="addMailboxSafelistEmailOrDomain" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add email address or domain to
         safelist">
         <para role="shortdesc">Adds an email address or domain to the
            safelist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/safelist/anyone@yahoo.com',
                  {},'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
         </wadl:doc>
      </response>
   </method>

   <method id="updateMailboxSafelistEmails" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Updates email addresses in
         safelist">
         <para role="shortdesc">Updates email addresses in a
            safelist.</para>
         <para>Remarks</para>
         <para>You can use a '%' as a wild card in domains, but not in
            the TLD (.com, .net, etc). You cannot use wild cards in
            email addresses. For example, the following are allowed:
            @%.example.com, @examp%.com.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>addList</td>
                  <td>string</td>
                  <td>Comma separated list of email addresses to add
                     to the list</td>
               </tr>
               <tr>
                  <td>removeList</td>
                  <td>string</td>
                  <td>Comma separated list of email addresses to
                     remove from the list</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/safelist',
                  { 'addList' =\u003E
                  '@%.example.com,abc@example.com', 'removeList'
                  =\u003E '@examp%.com' }, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="deleteMailboxSafelistEmailOrDomain" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete email address or domain from safelist">
         <para role="shortdesc">Deletes an email address or domain
            from a safelist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/safelist/anyone@yahoo.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid email address or domain. Sample
               Message: invalid email address: abc</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered email address or domain is not on the
               current safelist. Sample Message: anyone@yahoo.com is
               not found on the list</para>
         </wadl:doc>
      </response>
   </method>

   <method id="listMailboxSafelistIPs" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List IP addresses in mailbox safelist">
         <para role="shortdesc">Lists IP addresses in a mailbox
            safelist.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipsafelist',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;ipSafelist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:ipSafelist"&gt; &lt;addresses&gt;
                  &lt;ip&gt;192.168.0.1&lt;/ip&gt;
                  &lt;ip&gt;192.168.0.2&lt;/ip&gt; &lt;/addresses&gt;
                  &lt;/ipSafelist&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"addresses":["192.168.0.1","192.168.0.2"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="addMailboxSafelistIP" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add IP address to safelist">
         <para role="shortdesc">Adds an IP address to a
            safelist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipsafelist/216.12.34.1',
                  {},'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered invalid IP address. Sample Message: invalid
               ip address: 123</para>
         </wadl:doc>
      </response>
   </method>

   <method id="updateMailboxSafelistIPs" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update IP addresses in safelist">
         <para role="shortdesc">Updates IP addresses in a
            safelist.</para>
         <para>Remarks</para>
         <para>You can use a '%' as a wild card in the last octets to
            specify IP ranges. For example: 216.12.34.%, 216.12.%.%,
            216.%.%.%.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>addList</td>
                  <td>string</td>
                  <td>Comma separated list of IP addresses to add to
                     the list</td>
               </tr>
               <tr>
                  <td>removeList</td>
                  <td>string</td>
                  <td>Comma separated list of IP addresses to remove
                     from the list</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/rs/mailboxes/jane.doe/spam/ipsafelist',
                  { 'addList' =\u003E '216.12.34.%,216.12.%.%',
                  'removeList' =\u003E '216.%.%.%' }, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="deleteMailboxSafelistIP" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete IP address from safelist">
         <para role="shortdesc">Deletes an IP address from a
            safelist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith/spam/ipsafelist/216.12.34.1',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Entered IP is not on the current safelist. Sample
               Message: 216.12.34.1 is not found on the
               safelist</para>
         </wadl:doc>
      </response>
   </method>

   <method id="showMailboxSettingDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show storage notification settings">
         <para role="shortdesc">Shows storage notification settings
            for a specified Rackspace mailbox.</para>
         <para>These settings control whether an email notification is
            sent to users when their mailbox reaches a certain
            capacity.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/rs/storageNotification',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;rsStorageNotification
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:rsStorageNotification"&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;notificationCC&gt;test@email.net&lt;/notificationCC&gt;
                  &lt;notificationMessage&gt;The mailbox is getting
                  full.&lt;/notificationMessage&gt;
                  &lt;notificationPercentage&gt;99&lt;/notificationPercentage&gt;
                  &lt;/rsStorageNotification&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"enabled":true, "notificationCC":"test@email.net",
                  "notificationMessage":"Test",
                  "notificationPercentage":99}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="updateMailboxSettings" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update mailbox storage notification settings">
         <para role="shortdesc">Updates Rackspace mailbox storage
            notification settings in a specified domain.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>enabled</td>
                  <td>boolean</td>
                  <td>Activates domain storage notification.
                     (Required)</td>
               </tr>
               <tr>
                  <td>notificationPercentage</td>
                  <td>int</td>
                  <td>The storage percentage that triggers the
                     notification. (Required for Add) (Valid Values:
                     50, 60, 70, 80, 90, 99)</td>
               </tr>
               <tr>
                  <td>notificationMessage</td>
                  <td>string</td>
                  <td>The notification message. (The special tag
                     &lt;*USER*&gt; will substitute in the username.
                     The special tag &lt;*DOMAIN*&gt; will substitute
                     in the domain.)</td>
               </tr>
               <tr>
                  <td>notificationCC</td>
                  <td>string</td>
                  <td>An email address the notification message will
                     be carbon copied to.</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/rs/mailboxes/alex.smith',
                  'text/xml', { 'enabled' =\u003E 'true',
                  'notificationPercentage' =\u003E '90',
                  'notificationMessage' =\u003E 'Your mailbox
                  \"\u003C*USER*\u003E@\u003C*DOMAIN*\u003E\" is
                  almost full.', 'notificationCC' =\u003E
                  'test@testdomain.com' } " });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="listRackspaceDomainAliases" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List aliases in Rackspace domain">
         <para role="shortdesc">Lists aliases in a Rackspace
            domain.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The show operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/rs/aliases',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;aliasList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:aliasList"&gt; &lt;aliases&gt;
                  &lt;alias&gt; &lt;name&gt;alias1&lt;/name&gt;
                  &lt;numberOfMembers&gt;3&lt;/numberOfMembers&gt;
                  &lt;/alias&gt; &lt;/aliases&gt;
                  &lt;/aliasList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"aliases":[{"name":"alias1","numberOfMembers":3}]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="showAliasDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show alias details">
         <para role="shortdesc">Shows alias details.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The show operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1',
                  Formats.xml" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;alias
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:alias"&gt;
                  &lt;name&gt;alias1&lt;/name&gt;
                  &lt;emailAddressList&gt;
                  &lt;emailAddress&gt;jane.doe@resellerallservices.net&lt;/emailAddress&gt;
                  &lt;emailAddress&gt;e3@yahoo.com&lt;/emailAddress&gt;
                  &lt;/emailAddressList&gt;
                  &lt;/alias&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"emailAddressList":{"emailAddress":["jane.doe@resellerallservices.net","e3@yahoo.com"]},"name":"alias3"}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Non-existent alias.. Sample Message: Resource not
               found.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="createAlias" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Create alias">
         <para role="shortdesc">Creates an alias.</para>
         <para>Remarks</para>
         <para>Currently there is a limit of 50 domain emails and 4
            non-domain emails.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>aliasEmails</td>
                  <td>Comma separated list of domain and non-domain
                     emails.</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1',
                  {'aliasEmails'=\u003E'jane.doe@resellerallservices.net,
                  joe.schmoe@resellerallservices.net,e1@yahoo.com,
                  e2@gmail.com' }, Formats.xml" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Non-existent domain email address.. Sample Message:
               An alias must point to a valid email address. The
               following email addresses do not exist:
               a@resellerallservices.net</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Empty domain email list and non-domain email list..
               Sample Message: An alias must point to a valid email
               address.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>More than four non-domain email addresses
               specified.. Sample Message: Max number of non-local
               email recipients reached.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="deleteAlias" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete alias">
         <para role="shortdesc">Deletes an alias.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1',
                  Formats.xml" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Non-existent alias.. Sample Message: Resource not
               found</para>
         </wadl:doc>
      </response>
   </method>

   <method id="addDomainlistEmail" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add email address to alias list">
         <para role="shortdesc">Adds an email address to a domain or
            non-domain email list.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1/joe.schmoe@resellerallservices.net',
                  {}, Formats.xml" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Non-existent email address in the alias.. Sample
               Message: An alias must point to a valid email address.
               The following email addresses do not exist:
               a@resellerallservices.net</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>More than four non-domain email addresses
               specified.. Sample Message: Max number of non-local
               email recipients reached.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Non existent alias.. Sample Message: Resource not
               found.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="deleteDomainlistEmail" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete email address from alias list">
         <para role="shortdesc">Deletes an email address from a domain
            or non-domain email list.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/100018/domains/resellerallservices.net/rs/aliases/alias1/joe.schmoe@resellerallservices.net',
                  {}, Formats.xml" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Non-existent alias.. Sample Message: Resource not
               found</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Non existent email address in the alias.. Sample
               Message: Email address jane.doe@resellerallservices.net
               does not exist in alias alias1.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="bulkUpdateAlias" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Bulk-update alias list">
         <para role="shortdesc">Updates an existing alias by replacing
            its contents with the new email addresses specified in the
            field aliasEmails.</para>
         <para>The following list shows the number of email addresses
            you can specify:</para>
         <itemizedlist>
            <listitem>
               <itemizedlist>
                  <listitem>
                     <para>1 - 50 domain email addresses</para>
                  </listitem>
                  <listitem>
                     <para>1 - 4 non-domain addresses</para>
                  </listitem>
               </itemizedlist>
            </listitem>
            <listitem>
               <para>You must specify at least one email address. By
                  default, the maximum combined total of email
                  addresses you can specify is 50.</para>
            </listitem>
            <listitem>
               <para>You cannot delete a specific email address using
                  DELETE. If you use DELETE with this operation, the
                  entire alias is deleted.</para>
            </listitem>
         </itemizedlist>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>aliasEmail</td>
                  <td>string</td>
                  <td>A comma separated list of email addresses.</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/100487/domains/testdomain.com/rs/aliases/alias_name',
                  {
                  aliasEmails=email@outsider.com,abc@yahoo.com,user1@domain.com,
                  user2@domain.com }, 'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Modify Invalid Alias. Sample Message: Entity of type
               Alias identified by user3@domain.com was not
               found.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Modify Valid Alias With No Email Address. Sample
               Message: An alias must point to a valid email
               address.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Modify Valid Alias With Non Existing Email
               Address(es). Sample Message: An alias must point to a
               valid email address. The following email addresses do
               not exist: user@domain.com.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="listDomainMailboxes" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List domain mailboxes">
         <para role="shortdesc">Lists mailboxes in a domain.</para>
         <para>Filter/Search</para>
         <para>Mailbox searches may be filtered by the 'enabled' flag
            using query methods ?enabled=true and
            ?enabled=false.</para>
         <para>Custom Fields</para>
         <itemizedlist>
            <listitem>
               <para>The result displays each mailbox's 'name' and
                  'displayName' as default.</para>
            </listitem>
            <listitem>
               <para>There is a query string 'fields' that allows the
                  result to display more mailbox properties. The
                  additional properties are: 'size', 'currentUsage',
                  'hasBlackBerryMobileService',
                  'hasActiveSyncMobileService'.</para>
            </listitem>
         </itemizedlist>
         <para>
            <i xmlns="http://www.w3.org/1999/xhtml">Example</i>
         </para>
         <itemizedlist>
            <listitem>
               <para>GET
                  '/customers/12345678/domains/example.com/ex/mailboxes?fields=size,currentUsage',
                  'text/xml'</para>
            </listitem>
         </itemizedlist>
         <para>Remarks</para>
         <para>The show operation only supports the GET HTTP
            verb.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/mailboxes',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;mailboxList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:mailboxList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;mailboxes&gt;
                  &lt;mailbox&gt;
                  &lt;name&gt;apiexmailbox55&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;/mailbox&gt; &lt;mailbox&gt;
                  &lt;name&gt;apiexmailbox6&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;/mailbox&gt; &lt;mailbox&gt;
                  &lt;name&gt;apiexmailbox90&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;/mailbox&gt; &lt;/mailboxes&gt;
                  &lt;/mailboxList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":0,"size":50,"total":3,"mailboxes":[{"name":"apiexmailbox55","displayName":"API
                  Test"},{"name":"apiexmailbox6","displayName":"API
                  Test"},{"name":"apiexmailbox90","displayName":"API
                  Test"}]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="showMailboxDetails1" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show mailbox details">
         <para role="shortdesc">Shows details for a specified
            mailbox.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The show operation only supports the GET HTTP
                  verb.</para>
            </listitem>
            <listitem>
               <para>The "samAccountName" is the login name used to
                  support clients and servers running older versions
                  of the operating system.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;mailbox
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:mailbox"&gt;
                  &lt;name&gt;apiexmailbox90&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;size&gt;2048&lt;/size&gt;
                  &lt;currentUsage&gt;0&lt;/currentUsage&gt;
                  &lt;isHidden&gt;false&lt;/isHidden&gt;
                  &lt;visibleInRackspaceEmailCompanyDirectory&gt;false&lt;/visibleInRackspaceEmailCompanyDirectory&gt;
                  &lt;isPublicFolderAdmin&gt;true&lt;/isPublicFolderAdmin&gt;
                  &lt;enabled&gt;true&lt;/enabled&gt;
                  &lt;lastLogin&gt;2/12/2010 1:00:00
                  AM&lt;/lastLogin&gt; &lt;contactInfo&gt;
                  &lt;firstName&gt;API&lt;/firstName&gt;
                  &lt;lastName&gt;Test&lt;/lastName&gt;
                  &lt;jobTitle&gt;Dev&lt;/jobTitle&gt;
                  &lt;company&gt;My Company&lt;/company&gt;
                  &lt;department&gt;R&amp;D&lt;/department&gt;
                  &lt;businessNumber&gt;111-1111&lt;/businessNumber&gt;
                  &lt;homeNumber&gt;222-2222&lt;/homeNumber&gt;
                  &lt;mobileNumber&gt;333-3333&lt;/mobileNumber&gt;
                  &lt;faxNumber&gt;444-4444&lt;/faxNumber&gt;
                  &lt;pagerNumber&gt;1234&lt;/pagerNumber&gt;
                  &lt;addressLine1&gt;123 Main
                  Street&lt;/addressLine1&gt;
                  &lt;city&gt;Blacksburg&lt;/city&gt;
                  &lt;state&gt;VA&lt;/state&gt;
                  &lt;zip&gt;24060&lt;/zip&gt;
                  &lt;country&gt;USA&lt;/country&gt; &lt;notes&gt;My
                  Notes&lt;/notes&gt;
                  &lt;customID&gt;0123456789&lt;/customID&gt;
                  &lt;/contactInfo&gt;
                  &lt;emailForwardingAddress&gt;apiexmailbox8@apidomain24.com&lt;/emailForwardingAddress&gt;
                  &lt;emailAddressList&gt; &lt;emailAddress&gt;
                  &lt;address&gt;apiexmailbox90@apidomain92.com&lt;/address&gt;
                  &lt;replyTo&gt;true&lt;/replyTo&gt;
                  &lt;/emailAddress&gt; &lt;/emailAddressList&gt;
                  &lt;hasBlackBerryMobileService&gt;false&lt;/hasBlackBerryMobileService&gt;
                  &lt;hasActiveSyncMobileService&gt;false&lt;/hasActiveSyncMobileService&gt;
                  &lt;samAccountName&gt;apiexmailbox90_53B5B&lt;/samAccountName&gt;
                  &lt;/mailbox&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"name":"apiexmailbox90", "displayName":"API Test",
                  "size":2048, "currentUsage":0, "isHidden":false,
                  "isPublicFolderAdmin":true, "enabled":true,
                  "lastLogin":"2\/12\/2006 1:00:00 AM",
                  "contactInfo":{"firstName":"API", "lastName":"Test",
                  "jobTitle":"Dev", "company":"My Company",
                  "department":"R&amp;D", "businessNumber":"111-1111",
                  "homeNumber":"222-2222", "mobileNumber":"333-3333",
                  "faxNumber":"444-4444", "pagerNumber":"1234",
                  "addressLine1":"123 Main Street",
                  "city":"Blacksburg", "state":"VA", "zip":"24060",
                  "country":"USA", "notes":"My Notes",
                  "customID":"0123456789"},
                  "emailForwardingAddress":"apiexmailbox8@apidomain24.com",
                  "emailAddressList":[{"address":"apiexmailbox90@apidomain92.com",
                  "replyTo":true}],
                  "hasBlackBerryMobileService":false,
                  "hasActiveSyncMobileService":false,
                  "samAccountName":"apiexmailbox90_53B5B",
                  "visibleInRackspaceEmailCompanyDirectory":false}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="addMailbox1" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add mailbox">
         <para role="shortdesc">Adds a mailbox.</para>
         <para>To add a mailbox, specify these form fields:</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>displayName</td>
                  <td>string</td>
                  <td>Display name (Required for Add)</td>
               </tr>
               <tr>
                  <td>password</td>
                  <td>string</td>
                  <td>Password (Required for Add)</td>
               </tr>
               <tr>
                  <td>size</td>
                  <td>positive integer</td>
                  <td>Mailbox size in megabytes (Required for
                     Add)</td>
               </tr>
               <tr>
                  <td>isHidden</td>
                  <td>boolean</td>
                  <td>Indicates whether or not the mailbox is hidden
                     from the Global Address List</td>
               </tr>
               <tr>
                  <td>isPublicFolderAdmin</td>
                  <td>boolean</td>
                  <td>Indicates whether or not the account is a public
                     folder administrator</td>
               </tr>
               <tr>
                  <td>firstName</td>
                  <td>string</td>
                  <td>First name</td>
               </tr>
               <tr>
                  <td>lastName</td>
                  <td>string</td>
                  <td>Last name</td>
               </tr>
               <tr>
                  <td>company</td>
                  <td>string</td>
                  <td>Company</td>
               </tr>
               <tr>
                  <td>department</td>
                  <td>string</td>
                  <td>Department</td>
               </tr>
               <tr>
                  <td>jobTitle</td>
                  <td>string</td>
                  <td>Job title</td>
               </tr>
               <tr>
                  <td>addressLine1</td>
                  <td>string</td>
                  <td>Street address</td>
               </tr>
               <tr>
                  <td>city</td>
                  <td>string</td>
                  <td>City</td>
               </tr>
               <tr>
                  <td>state</td>
                  <td>string</td>
                  <td>State</td>
               </tr>
               <tr>
                  <td>zip</td>
                  <td>string</td>
                  <td>Zip or postal code</td>
               </tr>
               <tr>
                  <td>country</td>
                  <td>string</td>
                  <td>Country</td>
               </tr>
               <tr>
                  <td>businessNumber</td>
                  <td>string</td>
                  <td>Business phone number</td>
               </tr>
               <tr>
                  <td>pagerNumber</td>
                  <td>string</td>
                  <td>Pager phone number</td>
               </tr>
               <tr>
                  <td>homeNumber</td>
                  <td>string</td>
                  <td>Home phone number</td>
               </tr>
               <tr>
                  <td>mobileNumber</td>
                  <td>string</td>
                  <td>Mobile phone number</td>
               </tr>
               <tr>
                  <td>faxNumber</td>
                  <td>string</td>
                  <td>Fax phone number</td>
               </tr>
               <tr>
                  <td>notes</td>
                  <td>string</td>
                  <td>Notes field</td>
               </tr>
               <tr>
                  <td>customID</td>
                  <td>string</td>
                  <td>A custom field that can be used to tie user
                     mailboxes to external user systems</td>
               </tr>
               <tr>
                  <td>emailForwardingAddress</td>
                  <td>string</td>
                  <td>Forwarding email address (If this field is
                     assigned an email address, then email forwarding
                     is turned on. If this field is not assigned or
                     assigned an empty string, then email forwarding
                     is disabled.)</td>
               </tr>
               <tr>
                  <td>visibleInRackspaceEmailCompanyDirectory</td>
                  <td>boolean</td>
                  <td>Flag indicating whether the mailbox is visible
                     in the company directory</td>
               </tr>
               <tr>
                  <td>enabled</td>
                  <td>boolean</td>
                  <td>Enable/Disable mailbox, input must be "true" or
                     "false"</td>
               </tr>
               <tr>
                  <td>lastLogin <i
                        xmlns="http://www.w3.org/1999/xhtml">
                        <b>(read only)</b>
                     </i>
                  </td>
                  <td>string</td>
                  <td>Date of last login, EST Time (in string
                     format)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                  'text/xml', { 'displayName' =\u003E 'Alex Smith',
                  'password' =\u003E 'Secret123!@#', 'size' =\u003E
                  '2048' } " });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New mailbox name (user name) doesn't meet the naming
               requirements. Sample Message: Invalid user name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New mailbox display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New mailbox password doesn't meet the password
               pattern requirements. Sample Message: Password must be
               at least 8 characters long</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New mailbox name (user name) already exists. Sample
               Message: The email address john.doe@abc.com is already
               in use</para>
         </wadl:doc>
      </response>
   </method>

   <method id="updateMailbox1" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update mailbox">
         <para role="shortdesc">Updates a mailbox.</para><para>To
            update a mailbox, specify these form fields:</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>displayName</td>
                  <td>string</td>
                  <td>Display name (Required for Add)</td>
               </tr>
               <tr>
                  <td>password</td>
                  <td>string</td>
                  <td>Password (Required for Add)</td>
               </tr>
               <tr>
                  <td>size</td>
                  <td>positive integer</td>
                  <td>Mailbox size in megabytes (Required for
                     Add)</td>
               </tr>
               <tr>
                  <td>isHidden</td>
                  <td>boolean</td>
                  <td>Indicates whether or not the mailbox is hidden
                     from the Global Address List</td>
               </tr>
               <tr>
                  <td>isPublicFolderAdmin</td>
                  <td>boolean</td>
                  <td>Indicates whether or not the account is a public
                     folder administrator</td>
               </tr>
               <tr>
                  <td>firstName</td>
                  <td>string</td>
                  <td>First name</td>
               </tr>
               <tr>
                  <td>lastName</td>
                  <td>string</td>
                  <td>Last name</td>
               </tr>
               <tr>
                  <td>company</td>
                  <td>string</td>
                  <td>Company</td>
               </tr>
               <tr>
                  <td>department</td>
                  <td>string</td>
                  <td>Department</td>
               </tr>
               <tr>
                  <td>jobTitle</td>
                  <td>string</td>
                  <td>Job title</td>
               </tr>
               <tr>
                  <td>addressLine1</td>
                  <td>string</td>
                  <td>Street address</td>
               </tr>
               <tr>
                  <td>city</td>
                  <td>string</td>
                  <td>City</td>
               </tr>
               <tr>
                  <td>state</td>
                  <td>string</td>
                  <td>State</td>
               </tr>
               <tr>
                  <td>zip</td>
                  <td>string</td>
                  <td>Zip or postal code</td>
               </tr>
               <tr>
                  <td>country</td>
                  <td>string</td>
                  <td>Country</td>
               </tr>
               <tr>
                  <td>businessNumber</td>
                  <td>string</td>
                  <td>Business phone number</td>
               </tr>
               <tr>
                  <td>pagerNumber</td>
                  <td>string</td>
                  <td>Pager phone number</td>
               </tr>
               <tr>
                  <td>homeNumber</td>
                  <td>string</td>
                  <td>Home phone number</td>
               </tr>
               <tr>
                  <td>mobileNumber</td>
                  <td>string</td>
                  <td>Mobile phone number</td>
               </tr>
               <tr>
                  <td>faxNumber</td>
                  <td>string</td>
                  <td>Fax phone number</td>
               </tr>
               <tr>
                  <td>notes</td>
                  <td>string</td>
                  <td>Notes field</td>
               </tr>
               <tr>
                  <td>customID</td>
                  <td>string</td>
                  <td>A custom field that can be used to tie user
                     mailboxes to external user systems</td>
               </tr>
               <tr>
                  <td>emailForwardingAddress</td>
                  <td>string</td>
                  <td>Forwarding email address (If this field is
                     assigned an email address, then email forwarding
                     is turned on. If this field is not assigned or
                     assigned an empty string, then email forwarding
                     is disabled.)</td>
               </tr>
               <tr>
                  <td>visibleInRackspaceEmailCompanyDirectory</td>
                  <td>boolean</td>
                  <td>Flag indicating whether the mailbox is visible
                     in the company directory</td>
               </tr>
               <tr>
                  <td>enabled</td>
                  <td>boolean</td>
                  <td>Enable/Disable mailbox, input must be "true" or
                     "false"</td>
               </tr>
               <tr>
                  <td>lastLogin <i
                        xmlns="http://www.w3.org/1999/xhtml">
                        <b>(read only)</b>
                     </i>
                  </td>
                  <td>string</td>
                  <td>Date of last login, EST Time (in string
                     format)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                  'text/xml', { 'homeNumber' =\u003E '8005551234' } "
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New mailbox name (user name) doesn't meet the naming
               requirements. Sample Message: Invalid user name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New mailbox display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New mailbox password doesn't meet the password
               pattern requirements. Sample Message: Password must be
               at least 8 characters long</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New mailbox name (user name) already exists. Sample
               Message: The email address john.doe@abc.com is already
               in use</para>
         </wadl:doc>
      </response>
   </method>

   <method id="deleteMailbox1" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete mailbox">
         <para role="shortdesc">Deletes a mailbox.</para>
         <para>Remarks</para>
         <para>The mailbox and mailbox contents are deleted
            permanently.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="addMailboxEmail" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add email address to mailbox">
         <para role="shortdesc">Adds an email address to a
            mailbox.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/emailaddresses/alex@example.com',
                  {}, 'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="deleteMailboxEmail" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete email address">
         <para role="shortdesc">Deletes an email address.</para>
         <para>Remarks</para>
         <para>The operation will fail if the email address does not
            exist.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/emailaddresses/alex@example.com',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="showPermissionMailbox" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show Exchange mailbox permissions">
         <para role="shortdesc">Shows permissions for an Exchange
            mailbox.</para>
         <para>A permission is defined as a tuple (mailbox,
            permissionType). permissionType:= (SendAs | FullAccess |
            Both)</para>
         <para>Shows the current set of permissions granted on a
            user's mailbox.</para>
         <para>Remarks</para>
         <para>The results in the example below show the permission
            list for user Jane Doe's mailbox. The list contains one
            entry corresponding to that of user Joe Schmoe with
            permission type of "FullAccess".</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;permissionList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:permissionList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;0&lt;/total&gt; &lt;permissions&gt;
                  &lt;permission&gt;
                  &lt;emailAddress&gt;joe.schmoe@enterpriseallservices.net&lt;/emailAddress&gt;
                  &lt;permissionType&gt;fullAccess&lt;/permissionType&gt;
                  &lt;/permission&gt; &lt;/permissions&gt;
                  &lt;/permissionList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":0,"size":50,"total":0,"permissions":[{"emailAddress":"joe.schmoe@enterpriseallservices.net","permissionType":"fullAccess"}]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>


   <method id="grantAddMailboxPermission" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add Exchange mailbox permissions">
         <para role="shortdesc">Adds permissions to an Exchange
            mailbox.</para>
         <para>A permission is defined as a tuple (mailbox,
            permissionType). permissionType:= (SendAs | FullAccess |
            Both)</para>
         <para>Grants user2 the specified permission on mailbox of
            user1.</para>
         <para>Remarks</para>
         <para>The results in the example below show that on the
            mailbox of user Jane Doe, the user John Doe has been
            granted the permission of type "fullAccess".</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>permission</td>
                  <td>string</td>
                  <td>permissionType (Required)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions/john.doe',
                  {'permission' =\u003E 'fullAccess'}, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="updateMailboxPermission" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update Exchange mailbox permissions">
         <para role="shortdesc">Updates permissions for an Exchange
            mailbox.</para>
         <para>A permission is defined as a tuple (mailbox,
            permissionType). permissionType:= (SendAs | FullAccess |
            Both)</para>
         <para>Modifies permission granted to user2 on the mailbox of
            user1.</para>
         <para>Remarks</para>
         <para>The permission granted to user John Doe on the mailbox
            of Jane Doe is modified to "both".</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>permission</td>
                  <td>string</td>
                  <td>permissionType (Required)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions/john.doe',
                  {'permission' =\u003E 'both'}, 'text/xml'"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
   <method id="deleteMailboxPermission" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete Exchange mailbox permissions">
         <para role="shortdesc">Deletes permission granted to user2 on
            the mailbox of user1.</para>
         <para>Remarks</para>
         <para>The permission granted to user John Doe on the mailbox
            of Jane Doe is deleted.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/100012/domains/enterpriseallservices.net/ex/mailboxes/jane.doe/permissions/john.doe',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="listMailboxMobile" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List mailboxes with the BlackBerry mobile
         service enabled">
         <para role="shortdesc">Lists mailboxes with the BlackBerry
            mobile service enabled.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/blackberrymobileservices',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;blackBerryMobileServiceList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:blackBerryMobileServiceList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;mailboxes&gt;
                  &lt;mailbox&gt;apiexmailbox36&lt;/mailbox&gt;
                  &lt;mailbox&gt;apiexmailbox66&lt;/mailbox&gt;
                  &lt;mailbox&gt;apiexmailbox85&lt;/mailbox&gt;
                  &lt;/mailboxes&gt;
                  &lt;/blackBerryMobileServiceList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":0,"size":50,"total":3,"mailboxes":["apiexmailbox36","apiexmailbox66","apiexmailbox85"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="attachMailboxMobile" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add BlackBerry mobile service to mailbox">
         <para role="shortdesc">Attaches a BlackBerry mobile service
            to a mailbox.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>activationPassword</td>
                  <td>string</td>
                  <td>Activation password (Required)</td>
               </tr>
            </tbody>
         </table>
         <table rules="all">
            <caption>Status Code</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Code</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Sample
                        Message</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>Mailbox already has BlackBerry Service</td>
                  <td>400</td>
                  <td>User john.smith@example.com has BlackBerry
                     Mobile Service already</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/blackberrymobileservice',
                  'text/xml', { 'activationPassword' =\u003E '12345'
                  }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="detachMailboxMobile" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="BlackBerry Mobile Service - Delete">
         <para>Detaches a BlackBerry mobile service from a
            mailbox.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/blackberrymobileservice',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="listMailboxActiveSync" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List mailboxes with the ActiveSync mobile
         service enabled">
         <para role="shortdesc">Lists mailboxes with the ActiveSync
            mobile service enabled.</para>
         <para>Remarks</para>
         <para>The index operation only supports the GET HTTP
            verb.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/activesyncmobileservices',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;activeSyncMobileServiceList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:activeSyncMobileServiceList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;mailboxes&gt;
                  &lt;mailbox&gt;apiexmailbox36&lt;/mailbox&gt;
                  &lt;mailbox&gt;apiexmailbox66&lt;/mailbox&gt;
                  &lt;mailbox&gt;apiexmailbox85&lt;/mailbox&gt;
                  &lt;/mailboxes&gt;
                  &lt;/activeSyncMobileServiceList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":0,"size":50,"total":3,"mailboxes":["apiexmailbox36","apiexmailbox66","apiexmailbox85"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="showMailboxActiveSync" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show ActiveSync mobile service settings">
         <para>Shows the ActiveSync mobile service settings for a
            mailbox that are used to access Hosted Exchange
            2007.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/activesyncmobileservice',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;activeSyncMobileService
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:activeSyncMobileService"&gt;
                  &lt;emailAddress&gt;john.smith@example.com&lt;/emailAddress&gt;
                  &lt;serverAddress&gt;mex07A.emailsrvr.com&lt;/serverAddress&gt;
                  &lt;userName&gt;johnsmith1234&lt;/userName&gt;
                  &lt;domainAddress&gt;mex07A.mlsrvr.com&lt;/domainAddress&gt;
                  &lt;/activeSyncMobileService&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"emailAddress":"john.smith@example.com","serverAddress":"mex07A.emailsrvr.com","userName":"johnsmith1234","domainAddress":"mex07A.mlsrvr.com"}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Mailbox has no ActiveSync service. Sample Message:
               User john.smith@example.com has no active ActiveSync
               Mobile Service.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="attachMailboxActiveSync" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add ActiveSync mobile service to mailbox">
         <para role="shortdesc">Attaches an ActiveSync mobile service
            to a mailbox.</para>
         <table rules="all">
            <caption>Status Code</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Code</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Sample
                        Message</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>Mailbox already has ActiveSync Service</td>
                  <td>400</td>
                  <td>User john.smith@example.com has ActiveSync
                     Mobile Service already</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/activesyncmobileservice',
                  'text/xml', {}" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="deleteMailboxActiveSync" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="ActiveSync Mobile Service - Delete">
         <para>Detaches a ActiveSync mobile service from a
            mailbox.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/ex/mailboxes/john.smith/activesyncmobileservice',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>





   <method id="listMailboxBlacklist" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List email addresses in mailbox blacklist">
         <para role="shortdesc">Lists email addresses in a mailbox
            blacklist.</para>
         <para>Remarks</para>
         <itemizedlist>
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/mailboxes/alex.smith/spam/blacklist',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;blacklist
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:blacklist"&gt; &lt;addresses&gt;
                  &lt;address&gt;name1@spam.com&lt;/address&gt;
                  &lt;address&gt;name2@spam.com&lt;/address&gt;
                  &lt;/addresses&gt; &lt;/blacklist&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"addresses":["name1@spam.com","name2@spam.com"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>



   <method id="listContacts" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List contacts in domain">
         <para role="shortdesc">Lists contacts in a domain.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/contacts?contains=john',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;contactList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:contactList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;contacts&gt;
                  &lt;contact&gt;
                  &lt;name&gt;apiexcontact66&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;externalEmail&gt;externalemail58@yahoo.com&lt;/externalEmail&gt;
                  &lt;/contact&gt; &lt;contact&gt;
                  &lt;name&gt;apiexcontact73&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;externalEmail&gt;externalemail98@yahoo.com&lt;/externalEmail&gt;
                  &lt;/contact&gt; &lt;contact&gt;
                  &lt;name&gt;apiexcontact81&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;externalEmail&gt;externalemail46@yahoo.com&lt;/externalEmail&gt;
                  &lt;/contact&gt; &lt;/contacts&gt;
                  &lt;/contactList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":0,"size":50,"total":3,"contacts":[{"name":"apiexcontact66","displayName":"API
                  Test","externalEmail":"externalemail58@yahoo.com"},{"name":"apiexcontact73","displayName":"API
                  Test","externalEmail":"externalemail98@yahoo.com"},{"name":"apiexcontact81","displayName":"API
                  Test","externalEmail":"externalemail46@yahoo.com"}]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="showContactDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Show">
         <para>Returns the contact's details.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;contact
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:contact"&gt;
                  &lt;name&gt;apiexcontact73&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;externalEmail&gt;externalemail98@yahoo.com&lt;/externalEmail&gt;
                  &lt;isHidden&gt;false&lt;/isHidden&gt;
                  &lt;contactInfo&gt;
                  &lt;firstName&gt;API&lt;/firstName&gt;
                  &lt;lastName&gt;Test&lt;/lastName&gt;
                  &lt;jobTitle&gt;Dev&lt;/jobTitle&gt;
                  &lt;company&gt;My Company&lt;/company&gt;
                  &lt;department&gt;R&amp;D&lt;/department&gt;
                  &lt;businessNumber&gt;111-1111&lt;/businessNumber&gt;
                  &lt;homeNumber&gt;222-2222&lt;/homeNumber&gt;
                  &lt;mobileNumber&gt;333-3333&lt;/mobileNumber&gt;
                  &lt;faxNumber&gt;444-4444&lt;/faxNumber&gt;
                  &lt;pagerNumber&gt;1234&lt;/pagerNumber&gt;
                  &lt;addressLine1&gt;123 Main
                  Street&lt;/addressLine1&gt;
                  &lt;city&gt;Blacksburg&lt;/city&gt;
                  &lt;state&gt;VA&lt;/state&gt;
                  &lt;zip&gt;24060&lt;/zip&gt;
                  &lt;country&gt;USA&lt;/country&gt; &lt;notes&gt;My
                  Notes&lt;/notes&gt; &lt;/contactInfo&gt;
                  &lt;/contact&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"name":"apiexcontact73","displayName":"API
                  Test","externalEmail":"externalemail98@yahoo.com","isHidden":false,"contactInfo":{"firstName":"API","lastName":"Test","jobTitle":"Dev","company":"My
                  Company","department":"R&amp;D","businessNumber":"111-1111","homeNumber":"222-2222","mobileNumber":"333-3333","faxNumber":"444-4444","pagerNumber":"1234","addressLine1":"123
                  Main
                  Street","city":"Blacksburg","state":"VA","zip":"24060","country":"USA","notes":"My
                  Notes"}}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Contact is not found. Sample Message: Contact not
               found</para>
         </wadl:doc>
      </response>
   </method>

   <method id="addContact" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add contact">
         <para role="shortdesc">Adds a contact.</para>
         <para>If the contact does not exist, use add.</para>
         <para>If it does, use edit.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>displayName</td>
                  <td>string</td>
                  <td>Name of contact when displayed (Required for
                     add)</td>
               </tr>
               <tr>
                  <td>externalEmail</td>
                  <td>string</td>
                  <td>Email address (Required for add)</td>
               </tr>
               <tr>
                  <td>isHidden</td>
                  <td>boolean</td>
                  <td>Whether the contact is hidden from the Global
                     List</td>
               </tr>
               <tr>
                  <td>firstName</td>
                  <td>string</td>
                  <td>First name</td>
               </tr>
               <tr>
                  <td>lastName</td>
                  <td>string</td>
                  <td>Last name</td>
               </tr>
               <tr>
                  <td>jobTitle</td>
                  <td>string</td>
                  <td>Job title</td>
               </tr>
               <tr>
                  <td>company</td>
                  <td>string</td>
                  <td>Company</td>
               </tr>
               <tr>
                  <td>department</td>
                  <td>string</td>
                  <td>Department</td>
               </tr>
               <tr>
                  <td>businessNumber</td>
                  <td>string</td>
                  <td>Business phone number</td>
               </tr>
               <tr>
                  <td>homeNumber</td>
                  <td>string</td>
                  <td>Home phone number</td>
               </tr>
               <tr>
                  <td>mobileNumber</td>
                  <td>string</td>
                  <td>Mobile phone number</td>
               </tr>
               <tr>
                  <td>faxNumber</td>
                  <td>string</td>
                  <td>Fax number</td>
               </tr>
               <tr>
                  <td>pagerNumber</td>
                  <td>string</td>
                  <td>Pager number</td>
               </tr>
               <tr>
                  <td>addressLine1</td>
                  <td>string</td>
                  <td>Street address</td>
               </tr>
               <tr>
                  <td>city</td>
                  <td>string</td>
                  <td>City</td>
               </tr>
               <tr>
                  <td>state</td>
                  <td>string</td>
                  <td>State</td>
               </tr>
               <tr>
                  <td>zip</td>
                  <td>string</td>
                  <td>Zip or postal code</td>
               </tr>
               <tr>
                  <td>country</td>
                  <td>string</td>
                  <td>Country</td>
               </tr>
               <tr>
                  <td>notes</td>
                  <td>string</td>
                  <td>Notes field</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                  'text/xml', { 'displayName' =\u003E 'Johnny
                  Customer', 'externalEmail' =\u003E 'jonny@apple.com'
                  }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Contact is not found. Sample Message: No user with
               the email address jane.doe@abc.com exists</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New contact name (user name) already exists. Sample
               Message: The email address john.doe@abc.com is already
               in use</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New contact name (user name) is reserved by
               Exchange. Sample Message: user name reserved</para>
         </wadl:doc>
      </response>
   </method>
   <method id="updateContact" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update contact">
         <para role="shortdesc">Updates a contact.</para>
         <para>If the contact does not exist, use add.</para><para>If
            it does, use edit.</para>
         <table rules="all">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>displayName</td>
                  <td>string</td>
                  <td>Name of contact when displayed (Required for
                     add)</td>
               </tr>
               <tr>
                  <td>externalEmail</td>
                  <td>string</td>
                  <td>Email address (Required for add)</td>
               </tr>
               <tr>
                  <td>isHidden</td>
                  <td>boolean</td>
                  <td>Whether the contact is hidden from the Global
                     List</td>
               </tr>
               <tr>
                  <td>firstName</td>
                  <td>string</td>
                  <td>First name</td>
               </tr>
               <tr>
                  <td>lastName</td>
                  <td>string</td>
                  <td>Last name</td>
               </tr>
               <tr>
                  <td>jobTitle</td>
                  <td>string</td>
                  <td>Job title</td>
               </tr>
               <tr>
                  <td>company</td>
                  <td>string</td>
                  <td>Company</td>
               </tr>
               <tr>
                  <td>department</td>
                  <td>string</td>
                  <td>Department</td>
               </tr>
               <tr>
                  <td>businessNumber</td>
                  <td>string</td>
                  <td>Business phone number</td>
               </tr>
               <tr>
                  <td>homeNumber</td>
                  <td>string</td>
                  <td>Home phone number</td>
               </tr>
               <tr>
                  <td>mobileNumber</td>
                  <td>string</td>
                  <td>Mobile phone number</td>
               </tr>
               <tr>
                  <td>faxNumber</td>
                  <td>string</td>
                  <td>Fax number</td>
               </tr>
               <tr>
                  <td>pagerNumber</td>
                  <td>string</td>
                  <td>Pager number</td>
               </tr>
               <tr>
                  <td>addressLine1</td>
                  <td>string</td>
                  <td>Street address</td>
               </tr>
               <tr>
                  <td>city</td>
                  <td>string</td>
                  <td>City</td>
               </tr>
               <tr>
                  <td>state</td>
                  <td>string</td>
                  <td>State</td>
               </tr>
               <tr>
                  <td>zip</td>
                  <td>string</td>
                  <td>Zip or postal code</td>
               </tr>
               <tr>
                  <td>country</td>
                  <td>string</td>
                  <td>Country</td>
               </tr>
               <tr>
                  <td>notes</td>
                  <td>string</td>
                  <td>Notes field</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                  'text/xml', { 'displayName' =\u003E 'Johnny
                  Customer', 'externalEmail' =\u003E 'jonny@apple.com'
                  }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Contact is not found. Sample Message: No user with
               the email address jane.doe@abc.com exists</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New contact name (user name) already exists. Sample
               Message: The email address john.doe@abc.com is already
               in use</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>New contact name (user name) is reserved by
               Exchange. Sample Message: user name reserved</para>
         </wadl:doc>
      </response>
   </method>

   <method id="deleteContact" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete contact">
         <para role="shortdesc">Deletes a contact.</para>
         <para>Remarks</para>
         <para>Contact is deleted immediately without verification and
            data is lost permanently.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/ex/contacts/alex.smith',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
            <para>Contact is not found. Sample Message: No user with
               the email address jane.doe@abc.com exists</para>
         </wadl:doc>
      </response>
   </method>

   <method id="listDistributionLists" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List distribution lists">
         <para role="shortdesc">Lists distribution
            lists.</para><para>Supports exporting. (see
            Listings).</para>
         <itemizedlist>
            <listitem>
               <para>Lists Distribution Lists, supports exporting.
                  (see Listings)</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#DLs">Distribution
                     List</phrase> Listing</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc title="OK" xmlns="http://docbook.org/ns/docbook">
               <para>The listing was successfully retrieved.</para>
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "DistributionLists": [ { "Description": "This is
                  an example of an edited DL.", "MemberCount": 0,
                  "CommonName": "exampledl", "DisplayName":
                  "ExampleDL", "Alias": "exampledl.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": "exampledl@example.com",
                  "Status": "showy", "LegacyExchangeDn":
                  "/o=e14s/ou=Exchange Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=exampledl59c" }
                  ], "Sort": "primarysmtpaddress", "Limit": 25,
                  "Total": 1, "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="showDistributionListDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show distribution list details">
         <para role="shortdesc">Shows distribution list
            details.</para>
         <itemizedlist>
            <listitem>
               <para>Use this route to read a distribution
                  List.</para>
            </listitem>
            <listitem>
               <para>Data Model: Distribution List</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Notes</para>
         <itemizedlist>
            <listitem>
               <para>The distribution list resource contains some
                  paged data that must be accessed via separate GET
                  requests.</para>
            </listitem>
            <listitem>
               <para>Properties directly on the object can be accessed
                  via a GET on the base resource, however Members,
                  Senders, and Managers must each be retrieved by
                  separate requests.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">

            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Description": "This is an example DL.",
                  "MemberCount": 2, "CommonName": "exampledl",
                  "DisplayName": "Example DL", "Alias":
                  "exampledl.example.com", "IsHiddenFromAddressList":
                  false, "PrimarySmtpAddress":
                  "exampledl@example.com", "Status": "showy",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=exampledl59c"
                  }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="addDistributionList" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Create">
         <para role="shortdesc">Adds a distribution list.</para>
         <itemizedlist>
            <listitem>
               <para>Use this route to add a new Distribution
                  List.</para>
            </listitem>
            <listitem>
               <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
            </listitem>
            <listitem>
               <para>Data Model: Distribution List</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists
                  { "Description" : "This is an example DL."
                  "CommonName" : "ExampleDL" "DisplayName" :
                  "ExampleDL" "IsHiddenFromAddressList": false,
                  "EmailAddresses": [ \t{ "Action\":\"Add" "Value" :
                  "exampledl-alias@example.com" "AddressPrimary":
                  false, "AddressProtocol" : "smtp" } ], "Members": {
                  "Recipients": [ \t{ \t \"Action\":\"Add" \t
                  \"Value\":\"mexuser1" \t}, \t{ \t \"Action\":\"Add"
                  \t \"Value\":\"mexuser2" \t} ] }, "ManagedBy": {
                  "Recipients": [ \t{ \t \"Action\":\"Add" \t
                  \"Value\":\"mexuser1" \t}, \t{ \t \"Action\":\"Add"
                  \t \"Value\":\"mexuser2" \t} ] },
                  "AcceptMessagesOnlyFrom": { "All\":\"restricted"
                  "Recipients": [ \t{ \t \"Action\":\"Add" \t
                  \"Value\":\"mexuser1" \t}, \t{ \t \"Action\":\"Add"
                  \t \"Value\":\"mexuser2" \t} ] } }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="204">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="No Content.">
            <para>The request has been accepted and is
               processed.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="updateDistributionList" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update distribution list">
         <para role="shortdesc">Updates a distribution list.</para>
         <itemizedlist>
            <listitem>
               <para>Updates a distribution list.</para>
            </listitem>
            <listitem>
               <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
            </listitem>
            <listitem>
               <para>Data Model: Distribution List</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Notes</para>
         <itemizedlist>
            <listitem>
               <para>All data that is part of the Exchange
                  distribution list resource can be updated in a
                  single PUT request.</para>
            </listitem>
            <listitem>
               <para>Recipients, ManagedBy, and AcceptMessagesOnlyFrom
                  must specify an Action, set to either Add or Remove,
                  to specify the operation for that value.<br
                     xmlns="http://www.w3.org/1999/xhtml"/>
               </para>
            </listitem>
            <listitem>
               <para>AcceptMessagesOnlyFrom also has an additional
                  parameter All that can be set to restricted (to
                  specify specific allowed senders) or public.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL
                  { "Description" : "This is an example of an edited
                  DL." "DisplayName" : "ExampleDL" "EmailAddresses": [
                  { "Action\":\"remove" "Value" :
                  "exampledl-alias@example.com" "AddressPrimary":
                  false, "AddressProtocol" : "smtp" } ], "Members": {
                  "Recipients": [ \t{ \t\t\"Action\":\"Remove"
                  \t\t\"Value\":\"mexuser1" \t}, \t{
                  \t\t\"Action\":\"Add" \t\t\"Value\":\"mexuser3" \t}
                  ] }, "ManagedBy": { "Recipients": [ \t{
                  \t\t\"Action\":\"Remove" \t\t\"Value\":\"mexuser1"
                  \t}, \t{ \t\t\"Action\":\"Add"
                  \t\t\"Value\":\"mexuser3" \t} ] },
                  "AcceptMessagesOnlyFrom": { "All\":\"restricted"
                  "Recipients": [ \t{ \t\t\"Action\":\"Remove"
                  \t\t\"Value\":\"mexuser3" \t}, \t{
                  \t\t\"Action\":\"Add" \t\t\"Value\":\"mexuser2" \t}
                  ] } }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="204">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="No Content.">
            <para>The request has been accepted and is
               processed.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="deleteDistributionList" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Delete">
         <para role="shortdesc">Deletes a distribution list.</para>
         <itemizedlist>
            <listitem>
               <para>Use this route to delete a distribution
                  list.</para>
            </listitem>
            <listitem>
               <para>Supports Asynchronous Statuses and Asynchronous
                  Errors.</para>
            </listitem>
            <listitem>
               <para>Data Model: None</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionList/ExampleDL"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="204">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="No Content.">
            <para>The request has been accepted and is
               processed.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="exportDistributionListFile" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Export">
         <para role="shortdesc">Exports a file of distribution
            lists.</para>
         <itemizedlist>
            <listitem>
               <para>Use this route to export a file of distribution
                  lists.</para>
            </listitem>
            <listitem>
               <para>Data Model: Distribution List Listing</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <wadl:param name="exportTo" type="xs:string"/>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionLists?exportTo=myAdminEmail@example.com"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="202"/>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Accepted.">
            <para>The request has been accepted and is
               processed.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="importDistributionListFile" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" title="Import">
         <para role="shortdesc">Imports a file of distribution
            lists.</para>
         <itemizedlist>
            <listitem>
               <para>Use this route to import a file of distribution
                  lists.</para>
            </listitem>
            <listitem>
               <para>Data Model: FileUrl (string)</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook"
            >Instructions</para>
         <ol xmlns="http://www.w3.org/1999/xhtml">
            <listitem xmlns="http://docbook.org/ns/docbook">
               <para>Create a CSV (comma-separated values) file
                  containing the distribution lists you'd like to
                  import. You can get a valid CSV file format by
                  bulk-exporting your current distribution
                  lists.</para>
            </listitem>
            <listitem xmlns="http://docbook.org/ns/docbook">
               <para>Upload the file to a public accessible URL (e.g.
                  cloud-files, CDN, etc.)</para>
            </listitem>
            <listitem xmlns="http://docbook.org/ns/docbook">
               <para>Call this endpoint with the url of the file in
                  the body.</para>
            </listitem>
            <listitem xmlns="http://docbook.org/ns/docbook">
               <para>You will receive a confirmation email to the
                  address specified in the URL when the import is
                  complete. Any rows that were not able to be imported
                  are available via a link provided in the
                  confirmation email.</para>
            </listitem>
         </ol>
      </wadl:doc>
      <request>
         <wadl:param name="emailAddress" type="xs:string"/>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionLists?emailAddress=myAdminEmail.com
                  { "FileUrl" :
                  "http://asdfasdfzxcvzxcvasdfasdf.cf1.rackcdn.com/MyDistributionLists.csv"
                  }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="202"/>
      <response status="202">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Accepted.">
            <para>The request has been accepted and is
               processed.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFoundFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="listDistributionListAltEmails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Email Addresses - List">
         <para role="shortdesc">Lists a distribution list's alternate
            email addresses. (see Listings).</para>
         <itemizedlist>
            <listitem>
               <para>Lists a distribution list's alternate email
                  addresses. (see Listings)</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#EXDLEA">Email
                     Address</phrase> Listing</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/distributionlists/ExampleDL/emailaddresses"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               title="OK.">
               <para>The data was successfully retrieved.</para>
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "EmailAddresses": [ { "Value":
                  "exampledl@example.com", "AddressPrimary": true,
                  "AddressProtocol": "smtp" }, { "Value":
                  "exampledl-alias@example.com", "AddressPrimary":
                  false, "AddressProtocol": "smtp" } ], "Limit": 25,
                  "Total": 2, "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <!-- begin EXCHANGE RESOURCES -->

   <method id="listResourceMailboxes" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List resource mailboxes">
         <para role="shortdesc">Lists resource mailboxes.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this to list resource mailboxes, supports
                  exporting, supports exporting. (see Listings)</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#ExchangeResource"
                     >Exchange Resource</phrase> Listing</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "ResourceMailboxes": [ { "Type": "Room",
                  "PhoneNumber": "1234567890", "Upn":
                  "room.101@example.com", "ResourceCapacity": 25,
                  "CustomProperties": [ { "Value":
                  "Videoconferencing", "ExchangeAction": 0 }, {
                  "Value": "Whiteboard", "ExchangeAction": 0 } ],
                  "CommonName": "room.101", "DisplayName": "Room 101",
                  "Alias": "room.101.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": null, "EmailAddresses": null,
                  "Status": "showy", "SamAccountName": "room.101",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.101b5c" }, {
                  "Type": "Room", "PhoneNumber": "1234567890", "Upn":
                  "room.102@example.com", "ResourceCapacity": 25,
                  "CustomProperties": [ { "Value":
                  "Videoconferencing", "ExchangeAction": 0 }, {
                  "Value": "Whiteboard", "ExchangeAction": 0 } ],
                  "CommonName": "room.102", "DisplayName": "Room 101",
                  "Alias": "room.102.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": null, "EmailAddresses": null,
                  "Status": "showy", "SamAccountName": "room.102",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.1029fd" }, {
                  "Type": "Room", "PhoneNumber": "1234567890", "Upn":
                  "room.103@example.com", "ResourceCapacity": 25,
                  "CustomProperties": [ { "Value":
                  "Videoconferencing", "ExchangeAction": 0 }, {
                  "Value": "Whiteboard", "ExchangeAction": 0 } ],
                  "CommonName": "room.103", "DisplayName": "Room 103",
                  "Alias": "room.103.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": null, "EmailAddresses": null,
                  "Status": "showy", "SamAccountName": "room.103",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.10370c" } ],
                  "Sort": "cn", "Limit": 50, "Total": 3, "Order":
                  "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The listing was successfully retrieved.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="showResourceMailbox" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="show resource mailbox">
         <para role="shortdesc">Shows a resource mailbox.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to read an existing resource
                  mailbox.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#ExchangeResource"
                     >Exchange Resource</phrase>
               </para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Notes</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>The Exchange Resource resource contains some
                  paged data that must be accessed via separate GET
                  requests.</para>
            </listitem>
            <listitem>
               <para>Properties directly on the object and
                  CustomProperties, can be accessed via a GET on the
                  base resource.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.1"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Type": "Room", "PhoneNumber": "1234567890",
                  "Upn": "room.101@example.com", "ResourceCapacity":
                  25, "CustomProperties": [ { "Value":
                  "Videoconferencing", "ExchangeAction": 0 }, {
                  "Value": "Whiteboard", "ExchangeAction": 0 } ],
                  "CommonName": "room.101", "DisplayName": "Room 101",
                  "Alias": "room.101.example.com",
                  "IsHiddenFromAddressList": false,
                  "PrimarySmtpAddress": null, "EmailAddresses": null,
                  "Status": "showy", "SamAccountName": "room.101",
                  "LegacyExchangeDn": "/o=e14s/ou=Exchange
                  Administrative Group
                  (FYDIBOHF23SPDLT)/cn=Recipients/cn=room.1019d4"
                  }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The resource was successfully retrieved.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="addResourceMailbox" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Add resource mailbox">
         <para role="shortdesc">Adds a resource mailbox.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to add a new resource
                  mailbox.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#ExchangeResource"
                     >Exchange Resource</phrase>
               </para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources
                  { "CommonName" : "room.101" "Type" : "Room"
                  "DisplayName" : "Room 101" "PhoneNumber" :
                  "1234567890" "ResourceCapacity": 25,
                  "CustomProperties": [ { "Value" :
                  "Videoconferencing" }, { "Value" : "Whiteboard" } ],
                  "CalendarProcessing": { "AutoBooking" : "AutoUpdate"
                  "BookingWindowInDays": 90,
                  "EnforceSchedulingHorizon": false, "AllowConflicts":
                  true, "AllowRecurringMeetings": false,
                  "ScheduleOnlyDuringWorkHours": true,
                  "MaximumDurationInMinutes": 720,
                  "MaximumConflictInstances": 1,
                  "ConflictPercentageAllowed": 50,
                  "AdditionalResponse": { "Enable": true, "Value" :
                  "This is an additional response" } }, "Delegates": [
                  { "Value" : "user1" }, { "Value" : "user2" }, {
                  "Value" : "user3" } ], "Permissions": [ {
                  "Recipient" : "user5" "Types": [ "FullAccess" ] }, {
                  "Recipient" : "user6" "Types": [ "SendAs" ] }, {
                  "Recipient" : "user7" "Types": [ "FullAccess"
                  "SendAs" ] } ], "BookInPolicy": { "Recipients": [ {
                  "Value" : "user1" }, { "Value" : "user2" } ] },
                  "RequestInPolicy": { "Recipients": [ { "Value" :
                  "user4" }, { "Value" : "user5" } ] },
                  "RequestOutOfPolicy": { "AllUsers": true } }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="204">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="No Content.">
            <para>The request has been accepted and will be
               processed.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="updateResourceMailbox" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update resource mailbox">
         <para role="shortdesc">Updates a resource mailbox.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to update an existing resource
                  mailbox.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#ExchangeResource"
                     >Exchange Resource</phrase>
               </para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Notes</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>All data that is part of the 'Exchange Resource'
                  resource can be updated in a single PUT
                  request.</para>
            </listitem>
            <listitem>
               <para>CustomProperties, Delegates, and policies must
                  specify an Action, set to either Add or Remove, to
                  specify the operation for that value.</para>
            </listitem>
            <listitem>
               <para>Permissions must be specified in whole. For
                  example, resource1@example.com has user5's
                  permission types set to FullAccess.</para>
            </listitem>
            <listitem>
               <para>To add SendAs, the request must contain both
                  FullAccess and SendAs for that user.</para>
            </listitem>
            <listitem>
               <para>To remove all permissions from user7, the request
                  must contain an empty Type array for that
                  user.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101
                  { "Type" : "Room" "DisplayName" : "Conference Room
                  101" "PhoneNumber" : "try shouting"
                  "ResourceCapacity" : "30" "CustomProperties": [ {
                  "Value" : "Whiteboard" "Action" : "Remove" } ],
                  "CalendarProcessing": { "AutoBooking" : "AutoUpdate"
                  "BookingWindowInDays": 180,
                  "EnforceSchedulingHorizon": true, "AllowConflicts":
                  false, "AllowRecurringMeetings": true,
                  "ScheduleOnlyDuringWorkHours": false,
                  "MaximumDurationInMinutes": 1440,
                  "MaximumConflictInstances": 0,
                  "ConflictPercentageAllowed": 0,
                  "AdditionalResponse": { "Enable": false } },
                  "Delegates": [ { "Value" : "user3" "Action" :
                  "Remove" }, { "Value" : "user4" "Action" : "Add" }
                  ], "Permissions": [ { "Recipient" : "user5" "Types":
                  [ "FullAccess" "SendAs" ] }, { "Recipient" : "user7"
                  "Types": [] }, { "Recipient" : "user8" "Types": [
                  "FullAccess" ] } ], "BookInPolicy": { "Recipients":
                  [ { "Value" : "user2" "Action" : "Remove" }, {
                  "Value" : "user3" "Action" : "Add" } ] },
                  "RequestInPolicy": { "AllUsers": true },
                  "RequestOutOfPolicy": { "AllUsers": false,
                  "Recipients": [ { "Value" : "user7" "Action" : "Add"
                  }, { "Value" : "user8" "Action" : "Add" } ] } }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="204">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="No Content.">
            <para>The request has been accepted and will be
               processed.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>
   <method id="deleteResourceMailbox" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Delete resource mailbox">
         <para role="shortdesc">Deletes a resource mailbox.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The request has been accepted and will be
               processed.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="exportResourceMailboxes" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Export resource mailboxes file">
         <para role="shortdesc">Exports a file of resource
            mailboxes.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to export a file of resource
                  mailboxes.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#ExchangeResource"
                     >Exchange Resource</phrase> Listing</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <wadl:param name="exportTo" type="xs:string"/>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources?exportTo=myAdminEmail@example.com"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="202"/>
      <response status="202">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Accepted.">
            <para>The request has been accepted and will be
               processed.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the marker was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="showResouceMailboxCalendar" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Show resource mailbox calendar">
         <para role="shortdesc">Shows resource mailbox
            calendar.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to read an existing resource
                  mailbox's calendar processing data.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#CalendarProcessing"
                     >Calendar Processing</phrase>
               </para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/calendarProcessing"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "AutoBooking": "AutoUpdate",
                  "BookingWindowInDays": 90,
                  "EnforceSchedulingHorizon": false, "AllowConflicts":
                  true, "AllowRecurringMeetings": false,
                  "ScheduleOnlyDuringWorkHours": true,
                  "MaximumDurationInMinutes": 720,
                  "MaximumConflictInstances": 1,
                  "ConflictPercentageAllowed": 50,
                  "AdditionalResponse": { "Enable": true, "Value":
                  "This is an additional response" } }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The data was successfully retrieved.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="updateResourceMailboxCalendar" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Update resource mailbox calendar">
         <para role="shortdesc">Updates resource mailbox
            calendar.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to update an existing resource
                  mailbox's calendar processing data.</para>
            </listitem>
            <listitem>
               <para>Although Calendar Processing settings can be
                  updated as part of the base Exchange Resource
                  update, a convenience route is also available for
                  just sending just the Calendar Processing part of
                  the request.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#CalendarProcessing"
                     >Calendar Processing</phrase>
               </para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/calendarProcessing
                  { "AutoBooking" : "AutoUpdate"
                  "BookingWindowInDays": 180,
                  "EnforceSchedulingHorizon": true, "AllowConflicts":
                  false, "AllowRecurringMeetings": true,
                  "ScheduleOnlyDuringWorkHours": false,
                  "MaximumDurationInMinutes": 1440,
                  "MaximumConflictInstances": 0,
                  "ConflictPercentageAllowed": 0,
                  "AdditionalResponse": { "Enable": false } }"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>

   <method id="listDelegates" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="List resource mailbox delegates">
         <para role="shortdesc">Lists resource mailbox
            delegates.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to read an existing resource
                  mailbox's delegates data.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Delegates"
                     >Delegates</phrase> Listing</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/delegates"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Delegates": [ { "Value": "user1" }, { "Value":
                  "user2" }, { "Value": "user3" } ], "Limit": 50,
                  "Total": 3, "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The data was successfully retrieved.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="bulkUpdateDelegates" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook"
         title="Bulk update delegates">
         <para role="shortdesc">Bulk-updates delegates.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to update an existing resource
                  mailbox's delegates data.</para>
            </listitem>
            <listitem>
               <para>Although Delegates settings can be updated as
                  part of the base Exchange Resource update, a
                  convenience route is also available for just sending
                  the Delegates part of the request.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Delegates"
                     >Delegates</phrase> Array</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/delegates
                  [ { "Value" : "user1" "Action" : "Remove" }, {
                  "Value" : "user2" "Action" : "Remove" }, { "Value" :
                  "user5" "Action" : "Add" } ]" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The data was successfully retrieved.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="showResourceMailboxPermissions" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Show resource mailbox permissions">
         <para role="shortdesc">Shows resource mailbox
            permissions.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to read an existing resource
                  mailbox's permissions data.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Permissions"
                     >Permissions</phrase> Listing</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/permissions"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Permissions": [ { "Recipient": "user5", "Types":
                  [ "FullAccess" ] }, { "Recipient": "user6", "Types":
                  [ "SendAs" ] }, { "Recipient": "user7", "Types": [
                  "FullAccess", "SendAs" ] } ], "Limit": 50, "Total":
                  3, "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The data was successfully retrieved.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="bulkUpdateResourceMailboxCalendar" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Bulk-update calendar for resource mailbox">
         <para role="shortdesc">Bulk-updates calendar for resource
            mailbox.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to read an existing resource
                  mailbox's calendar processing data.</para>
            </listitem>
            <listitem>
               <para>Although Permissions settings can be updated as
                  part of the base Exchange Resource update, a
                  convenience route is also available for just sending
                  the Permissions part of the request.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Permissions"
                     >Permissions</phrase> Array</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/permissions
                  [ { "Recipient" : "user5" "Types": [ "FullAccess"
                  "SendAs" ] }, { "Recipient" : "user7" "Types": [] },
                  { "Recipient" : "user8" "Types": [ "FullAccess" ] }
                  ]" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The data was successfully retrieved.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>


   <method id="listPolicies" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List policies">
         <para role="shortdesc">Lists policies.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to read an existing resource
                  mailbox's permissions data.</para>
            </listitem>
            <listitem>
               <para>Examples in this section will use BookInPolicy,
                  but the interface for the three is all the
                  same.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Recipients"
                     >Recipients</phrase> Listing</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">URL Format</para>
         <para xmlns="http://docbook.org/ns/docbook">BookIn,
            RequestIn, and RequestOutOf policies can all be accessed
            via the resource's URL followed by /bookInPolicy,
            /requestInPolicy, and /requestOutOfPolicy,
            respectively.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/bookInPolicy</para>
            </listitem>
            <listitem>
               <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/requestInPolicy</para>
            </listitem>
            <listitem>
               <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/requestOutOfPolicy</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/bookInPolicy"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Recipients": [ { "Value": "user1" }, { "Value":
                  "user2" } ], "AllUsers":false, "Limit": 50, "Total":
                  2, "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The data was successfully retrieved.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="bulkUpdatePolicies" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Bulk update policies">
         <para role="shortdesc">Bulk-updates policies.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to read an existing resource
                  mailbox's policies data.</para>
            </listitem>
            <listitem>
               <para>Although policies settings can be updated as part
                  of the base Exchange Resource update, a convenience
                  route is also available for just sending the just
                  the policies part of the request.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Recipients"
                     >Recipients</phrase>
               </para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">URL Format</para>
         <para xmlns="http://docbook.org/ns/docbook">BookIn,
            RequestIn, and RequestOutOf policies can all be accessed
            via the resource's URL followed by /bookInPolicy,
            /requestInPolicy, and /requestOutOfPolicy,
            respectively.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/bookInPolicy</para>
            </listitem>
            <listitem>
               <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/requestInPolicy</para>
            </listitem>
            <listitem>
               <para>/v1/customers/{customer account
                  number}/domains/{domain name}/ex/resources/{common
                  name}/requestOutOfPolicy</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/bookInPolicy
                  { "Recipients": [ { "Value" : "user2" "Action" :
                  "Remove" }, { "Value" : "user3" "Action" : "Add" }
                  ], "AllUsers\":false }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="200">
         <wadl:doc xmlns="http://docbook.org/ns/docbook" title="OK.">
            <para>The data was successfully retrieved.</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Bad Request.">
            <para>The request was invalid. Inspect the validationFault
               response for more detail.</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook"
            title="Not Found.">
            <para>The domain does not exist, the domain does not have
               Exchange, or the resource was not found. Inspect the
               itemNotFondFault for more detail.</para>
         </wadl:doc>
      </response>
   </method>

   <method id="listRecipients" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List recipients that can be resource delegates on a domain">
         <para role="shortdesc">Lists recipients that can be resource
            delegates on a domain.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to list recipients that can be
                  delegates for a new resource on a given
                  domain.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Recipients"
                     >Recipients</phrase> Listing</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Note</para>
         <para xmlns="http://docbook.org/ns/docbook">
            https://api.emailsrvr.com/v1/domains/{domain}/ex/resourceOptions/
            is the base URL for getting complete sets of valid data
            that can be submitted as part of an Exchange Resource add
            operation.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resourceOptions/AvailableDelegatesRecipients"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Recipients": [ { "Value": "user1" }, { "Value":
                  "user10" }, { "Value": "user2" }, { "Value": "user3"
                  }, { "Value": "user4" }, { "Value": "user5" }, {
                  "Value": "user6" }, { "Value": "user7" }, { "Value":
                  "user8" }, { "Value": "user9" } ], "Limit": 50,
                  "Total": 10, "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
   </method>

   <method id="listRecipientsForResource" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List recipients with resource permissions on a domain">
         <para role="shortdesc">Lists recipients with resource
            permissions on a domain.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to list recipients that can have
                  permissions for a new resource on a given
                  domain.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Recipients"
                     >Recipients</phrase> Listing</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Note</para>
         <para xmlns="http://docbook.org/ns/docbook">
            https://api.emailsrvr.com/v1/domains/(domain)/ex/resourceOptions/
            is the base URL for getting complete sets of valid data
            that can be submitted as part of an Exchange Resource add
            operation.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resourceOptions/AvailablePermissionsRecipients"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Recipients": [ { "Value": "user1" }, { "Value":
                  "user10" }, { "Value": "user2" }, { "Value": "user3"
                  }, { "Value": "user4" }, { "Value": "user5" }, {
                  "Value": "user6" }, { "Value": "user7" }, { "Value":
                  "user8" }, { "Value": "user9" } ], "Limit": 50,
                  "Total": 10, "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
   </method>

   <method id="listRecipientsForPolicies" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List recipients that can be in resource policies">
         <para role="shortdesc">Lists recipients that can be in
            resource policies for a domain.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to list recipients that can be in
                  policies for a new resource on a given
                  domain.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Recipients"
                     >Recipients</phrase> Listing</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">URL Format</para>
         <para xmlns="http://docbook.org/ns/docbook">Available BookIn,
            RequestIn, and RequestOutOf policy recipients can all be
            accessed via the resourceOptions URL followed by
            /availableBookInPolicyRecipients,
            /availableRequestInPolicyRecipients,
            /availableRequestOutOfRecipients respectively. The example
            in this section will use BookInPolicy, but the interface
            for the three is all the same.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>/v1/customers/{customer account
                  number}/domains/{domain
                  name}/ex/resources/resourceOptions/availableBookInPolicyRecipients</para>
            </listitem>
            <listitem>
               <para>/v1/customers/{customer account
                  number}/domains/{domain
                  name}/ex/resources/resourceOptions/availableRequestInPolicyRecipients</para>
            </listitem>
            <listitem>
               <para>/v1/customers/{customer account
                  number}/domains/{domain
                  name}/ex/resources/resourceOptions/availableRequestOutOfRecipients</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Note</para>
         <para xmlns="http://docbook.org/ns/docbook">
            https://api.emailsrvr.com/v1/domains/{domain}/ex/resourceOptions/
            is the base URL for getting complete sets of valid data
            that can be submitted as part of an Exchange Resource add
            operation.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resourceOptions/availableBookInPolicyRecipients"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Recipients": [ { "Value": "user1" }, { "Value":
                  "user10" }, { "Value": "user2" }, { "Value": "user3"
                  }, { "Value": "user4" }, { "Value": "user5" }, {
                  "Value": "user6" }, { "Value": "user7" }, { "Value":
                  "user8" }, { "Value": "user9" } ], "Limit": 50,
                  "Total": 10, "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
   </method>

   <method id="listRecipientsDelegates" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List recipients that can be delegates">
         <para role="shortdesc">Lists recipients that can be delegates
            for a resource.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to list recipients that can be
                  delegates for an existing resource.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Recipients"
                     >Recipients</phrase> Listing</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Note</para>
         <para xmlns="http://docbook.org/ns/docbook">
            https://api.emailsrvr.com/v1/domains/{domain}/ex/resource/{common
            name}/options is the base URL for getting complete sets of
            valid data that can be submitted as part of an Exchange
            Resource edit operation.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/options/AvailableDelegatesRecipients"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Recipients": [ { "Value": "user10" }, { "Value":
                  "user4" }, { "Value": "user5" }, { "Value": "user6"
                  }, { "Value": "user7" }, { "Value": "user8" }, {
                  "Value": "user9" } ], "Limit": 50, "Total": 7,
                  "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
   </method>

   <method id="listRecipientsPermissions" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List recipients that have resource permissions">
         <para role="shortdesc">Lists recipients that have permissions
            for a resource.</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>Use this route to list recipients that can have
                  permissions for an existing resource.</para>
            </listitem>
            <listitem>
               <para>Data Model: <phrase role="#Recipients"
                     >Recipients</phrase> Listing</para>
            </listitem>
         </itemizedlist>
         <para xmlns="http://docbook.org/ns/docbook">Note</para>
         <para xmlns="http://docbook.org/ns/docbook">
            https://api.emailsrvr.com/v1/domains/{domain}/ex/resource/{common
            name}/options is the base URL for getting complete sets of
            valid data that can be submitted as part of an Exchange
            Resource edit operation.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  https://api.emailsrvr.com/v1/domains/example.com/ex/resources/room.101/options/AvailablePermissionsRecipients"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{ "Recipients": [ { "Value": "user1" }, { "Value":
                  "user10" }, { "Value": "user2" }, { "Value": "user3"
                  }, { "Value": "user4" }, { "Value": "user8" }, {
                  "Value": "user9" } ], "Limit": 50, "Total": 7,
                  "Order": "asc" }</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
   </method>


   <method id="listResourceMailboxesDomain" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List resource mailboxes for a domain">
         <para role="shortdesc">Lists the resource mailboxes
            associated with a domain.</para>
         <para xmlns="http://docbook.org/ns/docbook">Remarks</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/resources?size=100\u0026offset=10\u0026contains=conference',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;resourceList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:resourceList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;resources&gt;
                  &lt;resource&gt;
                  &lt;name&gt;apiexresource43&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;type&gt;room&lt;/type&gt; &lt;/resource&gt;
                  &lt;resource&gt;
                  &lt;name&gt;apiexresource5&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;type&gt;equipment&lt;/type&gt; &lt;/resource&gt;
                  &lt;resource&gt;
                  &lt;name&gt;apiexresource85&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;type&gt;room&lt;/type&gt; &lt;/resource&gt;
                  &lt;/resources&gt;
                  &lt;/resourceList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":0,"size":50,"total":3,"resources":[{"name":"apiexresource43","displayName":"API
                  Test","type":"room"},{"name":"apiexresource5","displayName":"API
                  Test","type":"equipment"},{"name":"apiexresource85","displayName":"API
                  Test","type":"room"}]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

   </method>

   <method id="showResourceDetails" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Show resource details">
         <para role="shortdesc">Shows resource details.</para>
         <para xmlns="http://docbook.org/ns/docbook">Remarks</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>The Show operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/resource/conference.room',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;resource
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:resource"&gt;
                  &lt;name&gt;apiexresource43&lt;/name&gt;
                  &lt;displayName&gt;API Test&lt;/displayName&gt;
                  &lt;type&gt;room&lt;/type&gt;
                  &lt;/resource&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"name":"apiexresource43","displayName":"API
                  Test","type":"room"}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>

      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Resource is not found. Sample Message: Resource not
               found</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Entity is found but it's not a resource mailbox.
               Sample Message: Mailbox is not a resource</para>
         </wadl:doc>
      </response>
   </method>

   <method id="addResource" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Add resource">
         <para role="shortdesc">Adds a resource with the specified
            information.</para><para>Required fields must be supplied
            when adding. Others are optional.</para>
         <table xmlns="http://docbook.org/ns/docbook">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>displayName</td>
                  <td>string</td>
                  <td>Resource display name (Required for add)</td>
               </tr>
               <tr>
                  <td>type</td>
                  <td>string</td>
                  <td>The resource type, 'room' or 'equipment'
                     (Required for add)</td>
               </tr>
               <tr>
                  <td>password</td>
                  <td>string</td>
                  <td>The password to change the settings of the
                     mailbox or add/remove admins (Required for
                     add)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/ex/resources/conference.room',
                  { 'displayName' =\u003E 'Conference Room' 'type'
                  =\u003E 'room' 'password' =\u003E 'abcDEF123' },
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>New resource mailbox already exists. Sample Message:
               The email address conference.room@abc.com is already in
               use</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>New resource mailbox name doesn't meet the naming
               requirements. Sample Message: Invalid resource
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Invalid resource mailbox type. Sample Message:
               Invalid Resource Type. The input must be:
               room/equipment</para>
         </wadl:doc>
      </response>
   </method>

   <method id="updateResource" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Updates resources">
         <para role="shortdesc">Updates a resource with the specified
            information.</para><para>Required fields must be supplied
            when adding. Others are optional.</para>
         <table xmlns="http://docbook.org/ns/docbook">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>displayName</td>
                  <td>string</td>
                  <td>Resource display name (Required for add)</td>
               </tr>
               <tr>
                  <td>type</td>
                  <td>string</td>
                  <td>The resource type, 'room' or 'equipment'
                     (Required for add)</td>
               </tr>
               <tr>
                  <td>password</td>
                  <td>string</td>
                  <td>The password to change the settings of the
                     mailbox or add/remove admins (Required for
                     add)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT
                  '/customers/12345678/domains/example.com/ex/resources/all.employees',
                  { 'displayName' =\u003E 'Conference Room A'
                  'password' =\u003E 'ABCd4321' }, 'text/xml',"
                  });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>New resource mailbox already exists. Sample Message:
               The email address conference.room@abc.com is already in
               use</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>New resource mailbox name doesn't meet the naming
               requirements. Sample Message: Invalid resource
               name</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>New display name doesn't meet the naming
               requirements. Sample Message: Invalid display
               name</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Invalid resource mailbox type. Sample Message:
               Invalid Resource Type. The input must be:
               room/equipment</para>
         </wadl:doc>
      </response>
   </method>

   <method id="deleteResource" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Delete resource">
         <para role="shortdesc">Deletes a resource.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/ex/resources/all.employees',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Resource is not found. Sample Message: Resource not
               found</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Entity is found but it's not a resource mailbox.
               Sample Message: Mailbox is not a resource</para>
         </wadl:doc>
      </response>
   </method>

   <method id="listResourceAdmins" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List resource admins">
         <para role="shortdesc">Lists resource admins.</para>
         <para xmlns="http://docbook.org/ns/docbook">Remarks</para>
         <itemizedlist xmlns="http://docbook.org/ns/docbook">
            <listitem>
               <para>The Index operation only supports the GET HTTP
                  verb.</para>
            </listitem>
         </itemizedlist>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET
                  '/customers/12345678/domains/example.com/ex/resources/conference.room/admins',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >&lt;?xml version="1.0" encoding="utf-8"?&gt;
                  &lt;resourceAdminList
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  xmlns="urn:xml:resourceAdminList"&gt;
                  &lt;offset&gt;0&lt;/offset&gt;
                  &lt;size&gt;50&lt;/size&gt;
                  &lt;total&gt;3&lt;/total&gt; &lt;admins&gt;
                  &lt;admin&gt;apiexmailbox70@apidomain90.com&lt;/admin&gt;
                  &lt;admin&gt;apiexmailbox87@apidomain90.com&lt;/admin&gt;
                  &lt;admin&gt;apiexmailbox89@apidomain90.com&lt;/admin&gt;
                  &lt;/admins&gt;
                  &lt;/resourceAdminList&gt;</xsdxt:code>
            </wadl:doc>
         </representation>

         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >{"offset":0,"size":50,"total":3,"admins":["apiexmailbox70@apidomain90.com","apiexmailbox87@apidomain90.com","apiexmailbox89@apidomain90.com"]}</xsdxt:code>
            </wadl:doc>
         </representation>
      </response>
   </method>
   <method id="addResourceAdmin" name="POST">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Add admin to resource">
         <para role="shortdesc">Adds an admin to a resource.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >POST
                  '/customers/12345678/domains/example.com/ex/resources/conference.room/admins/john.smith',
                  {}, 'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Resource is not found. Sample Message: Resource not
               found</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Entity is found but it's not a resource mailbox.
               Sample Message: Mailbox is not a resource</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Admin is already on the resource admin list. Sample
               Message: User is already on the resource admin
               list</para>
         </wadl:doc>
      </response>
   </method>

   <method id="deleteResourceAdmin" name="DELETE">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Delete admin from resource">
         <para role="shortdesc">Deletes the admin from a
            resource.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >DELETE
                  '/customers/12345678/domains/example.com/ex/resources/conference.room/admins/john.smith',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Resource is not found. Sample Message: Resource not
               found</para>
         </wadl:doc>
      </response>
      <response status="404">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Entity is found but it's not a resource mailbox.
               Sample Message: Mailbox is not a resource</para>
         </wadl:doc>
      </response>
      <response status="400">
         <wadl:doc xmlns="http://docbook.org/ns/docbook">
            <para>Admin is not found on the resource admin list.
               Sample Message: User is not on the resource admin
               list</para>
         </wadl:doc>
      </response>
   </method>
   <!-- begin SHAREPOINT -->

   <method id="showSharepointStatus" name="GET">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="List Sharepoint status">
         <para role="shortdesc">Shows the status and quota size of the
            SharePoint service.</para>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >GET '/customers/999999/sharepoint/settings',
                  'text/xml'" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="200">
         <representation mediaType="application/xml">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:sample
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
                  <xsdxt:code
                     href="./samples/ea-sharepoint-status-response.xml"
                  />
               </xsdxt:sample>
            </wadl:doc>
         </representation>
         <representation mediaType="application/json">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:sample
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
                  <xsdxt:code
                     href="./samples/ea-sharepoint-status-response.json"
                  />
               </xsdxt:sample>
            </wadl:doc>
         </representation>
      </response>
   </method>

   <method id="updateSharepointSettings" name="PUT">
      <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN"
         title="Update Sharepoint settings (reseller only)">
         <para role="shortdesc">Updates SharePoint settings for your
            customers. (reseller only.)</para>
         <table xmlns="http://docbook.org/ns/docbook">
            <caption>Request Data</caption>
            <thead>
               <tr>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Field
                        Name</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml">Data
                        Type</b>
                  </td>
                  <td>
                     <b xmlns="http://www.w3.org/1999/xhtml"
                        >Description</b>
                  </td>
               </tr>
            </thead>
            <tbody>
               <tr>
                  <td>enabled</td>
                  <td>boolean</td>
                  <td>Whether SharePoint is enabled or not. By
                     enabling SharePoint you and/or your customers are
                     agreeing to Rackspace's <link
                        xlink:href="http://www.rackspace.com/information/legal/sharepointappterms"
                        >SharePoint Services Terms and
                        Conditions</link>
                  </td>
               </tr>
               <tr>
                  <td>size</td>
                  <td>double</td>
                  <td>SharePoint's storage size in GB. Valid values
                     are .25 and any integer between 1 and 50
                     inclusive. This field will be ignored when
                     SharePoint is disabled. (default value is
                     0.25GB)</td>
               </tr>
            </tbody>
         </table>
      </wadl:doc>
      <request>
         <representation mediaType="application/json" element="noop">
            <wadl:doc xmlns="http://docbook.org/ns/docbook"
               xml:lang="EN">
               <xsdxt:code
                  xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
                  >PUT '/customers/123456/sharepoint/settings',
                  'text/xml', { 'enabled' =\u003E 'true', 'size'
                  =\u003E '10.0' }" });</xsdxt:code>
            </wadl:doc>
         </representation>
      </request>
      <response status="204"/>
   </method>
</application>
